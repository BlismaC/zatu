{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://glitch-hello-node/./public/client/damageText.js","webpack://glitch-hello-node/./public/client/drawing.js","webpack://glitch-hello-node/./public/client/hotbar.js","webpack://glitch-hello-node/./public/client/leaderboard.js","webpack://glitch-hello-node/./public/client/main.js","webpack://glitch-hello-node/./public/client/map.js","webpack://glitch-hello-node/./public/client/resourceDesigns.js","webpack://glitch-hello-node/./public/client/utils.js","webpack://glitch-hello-node/./public/client/weaponSelectionUI.js","webpack://glitch-hello-node/./public/client/weapons.js","webpack://glitch-hello-node/webpack/bootstrap","webpack://glitch-hello-node/webpack/runtime/define property getters","webpack://glitch-hello-node/webpack/runtime/hasOwnProperty shorthand","webpack://glitch-hello-node/webpack/runtime/make namespace object","webpack://glitch-hello-node/webpack/before-startup","webpack://glitch-hello-node/webpack/startup","webpack://glitch-hello-node/webpack/after-startup"],"sourcesContent":["// damageText.js - Manages and renders floating damage text visuals\n\n// --- Constants for Damage Text ---\nconst DAMAGE_TEXT_RISE_SPEED = 0.05; // Pixels per millisecond (adjust for desired speed)\nconst DAMAGE_TEXT_FADE_DURATION = 1000; // Milliseconds for text to fade out\nconst DAMAGE_TEXT_FONT_SIZE = 26; // Font size for damage numbers\nconst DAMAGE_TEXT_FONT_FAMILY = \"Arial Black\"; // Bold, impactful font\nconst DAMAGE_TEXT_OUTLINE_WIDTH = 2; // Outline for better visibility\n\nconst OWN_PLAYER_DAMAGE_COLOR = \"#00FF00\"; // Green for damage taken by self\nconst OPPONENT_DAMAGE_COLOR = \"#FFFFFF\"; // White for damage taken by opponents\n\n\n// Array to hold all currently active damage text objects\nlet activeDamageTexts = [];\n\n/**\n * Creates a new damage text object and adds it to the list of active texts.\n * @param {number} x - The world X coordinate where the damage occurred.\n * @param {number} y - The world Y coordinate where the damage occurred.\n * @param {number} damageAmount - The amount of damage to display.\n * @param {boolean} isOwnPlayer - True if the damage was taken by the local player, false otherwise.\n * @param {number} cameraX - The current camera X position.\n * @param {number} cameraY - The current camera Y position.\n */\nexport function createDamageText(x, y, damageAmount, isOwnPlayer, cameraX, cameraY) {\n    const displayX = x - cameraX;\n    const displayY = y - cameraY;\n\n    activeDamageTexts.push({\n        value: Math.floor(damageAmount), // Display whole numbers for damage\n        color: isOwnPlayer ? OWN_PLAYER_DAMAGE_COLOR : OPPONENT_DAMAGE_COLOR,\n        initialDisplayX: displayX,\n        initialDisplayY: displayY,\n        currentDisplayY: displayY, // This will change as it rises\n        startTime: Date.now(),\n        alpha: 1 // Starts fully opaque\n    });\n}\n\n/**\n * Updates the position and fade of all active damage text objects.\n * Should be called once per game loop frame.\n * @param {number} deltaTime - The time elapsed since the last frame in seconds.\n */\nexport function updateDamageTexts(deltaTime) {\n    const now = Date.now();\n    activeDamageTexts = activeDamageTexts.filter(text => {\n        const elapsedTime = now - text.startTime;\n\n        // Calculate new vertical position (rises upwards)\n        text.currentDisplayY = text.initialDisplayY - (elapsedTime * DAMAGE_TEXT_RISE_SPEED);\n\n        // Calculate new opacity (fades out)\n        text.alpha = 1 - (elapsedTime / DAMAGE_TEXT_FADE_DURATION);\n        \n        // Remove text if it has fully faded\n        return text.alpha > 0;\n    });\n}\n\n/**\n * Draws all active damage text objects on the canvas.\n * Should be called once per game loop frame after other game elements.\n * @param {CanvasRenderingContext2D} ctx - The 2D rendering context of the canvas.\n */\nexport function drawDamageTexts(ctx) {\n    ctx.save(); // Save the current canvas state\n\n    activeDamageTexts.forEach(text => {\n        ctx.globalAlpha = text.alpha; // Apply current opacity\n\n        ctx.font = `bold ${DAMAGE_TEXT_FONT_SIZE}px \"${DAMAGE_TEXT_FONT_FAMILY}\"`;\n        ctx.textAlign = \"center\";\n        ctx.textBaseline = \"middle\";\n\n        // Draw outline\n        ctx.strokeStyle = \"black\"; // Outline color\n        ctx.lineWidth = DAMAGE_TEXT_OUTLINE_WIDTH;\n        ctx.strokeText(text.value, text.initialDisplayX, text.currentDisplayY);\n\n        // Draw fill text\n        ctx.fillStyle = text.color;\n        ctx.fillText(text.value, text.initialDisplayX, text.currentDisplayY);\n    });\n\n    ctx.restore(); // Restore the canvas state (important for globalAlpha)\n}\n","// drawing.js - Handles all canvas drawing operations\n\n// --- Imports from main.js (Constants and Global State Access) ---\nimport {\n    worldWidth, worldHeight, MAX_HEALTH, PLAYER_SMOOTHING_FACTOR, TRAIL_LENGTH, TRAIL_MAX_ALPHA,\n    playerBodyRadiusX, playerBodyRadiusY, handRadius, handSideOffset, handForwardOffset,\n    SWING_DURATION, SWING_REACH, SWING_INWARD_AMOUNT,\n    healthBarWidth, healthBarHeight, healthBarVerticalOffsetFromPlayerBottom, healthBarBorderRadius,\n    fullHealthColor, lowHealthColor, healthBarBackgroundColor, healthBarOutlineColor, healthBarOutlineWidth,\n    backgroundColor, worldBorderColor, gridColor, playerFillColor, playerOutlineColor, playerOutlineWidth,\n    gridSize,\n    RESOURCE_TYPES, // Keep RESOURCE_TYPES as it's used elsewhere\n    PING_FONT_SIZE, PING_TEXT_COLOR, PING_BACKGROUND_COLOR, PING_BORDER_RADIUS, PING_PADDING_X, PING_PADDING_Y,\n\n    // Player Damage Visual Constants (updated for temporary flash)\n    PLAYER_DAMAGE_WIGGLE_STRENGTH, PLAYER_DAMAGE_WIGGLE_DECAY_RATE,\n    HIT_FLASH_DURATION, HIT_FLASH_COLOR, HIT_FLASH_OPACITY, // New constants for the hit flash\n\n    // Resource constants needed for drawing their sprites (ensure these are imported for getResSprite call)\n    RESOURCE_DRAW_SIZE,\n    RESOURCE_OUTLINE_COLOR,\n    RESOURCE_OUTLINE_WIDTH,\n\n    // NEW: Chat Bubble Constants\n    CHAT_BUBBLE_OFFSET_Y,\n    CHAT_BUBBLE_FONT_SIZE,\n    CHAT_BUBBLE_TEXT_COLOR,\n    CHAT_BUBBLE_BACKGROUND_COLOR,\n    CHAT_BUBBLE_PADDING_X,\n    CHAT_BUBBLE_PADDING_Y,\n    CHAT_BUBBLE_BORDER_RADIUS,\n\n    // NEW: Dead Player Hide Delay\n    DEAD_PLAYER_HIDE_DELAY\n} from './main.js';\n\n// --- Imports from utils.js (Helper Functions) ---\nimport { interpolateColor, lerpAngle } from './utils.js';\n\n// --- Imports from resourceDesigns.js (Resource Sprite Generation) ---\nimport { getResSprite } from './resourceDesigns.js';\n\n// --- NEW: Import drawMinimap from its dedicated file ---\nimport { drawMinimap } from './map.js';\n// Note: drawHotbar is called directly from main.js, so it's not imported here\n// Note: drawWeaponSelectionUI is called directly from main.js, so it's not imported here\n\n// NEW: Load the skull image asset\nconst skullImage = new Image();\nskullImage.src = 'assets/Skull.webp';\nskullImage.onerror = () => {\n    console.error(\"Failed to load skull image: assets/Skull.webp\");\n};\n\n\n// --- Ageing System UI Constants ---\nconst XP_BAR_WIDTH = 250;\nconst XP_BAR_HEIGHT = 20;\nconst XP_BAR_BORDER_RADIUS = 10;\nconst XP_BAR_BACKGROUND_COLOR = \"rgba(0,0,0,0.7)\"; // Dark background\nconst XP_BAR_FILL_COLOR = \"#FFFFFF\"; // Changed to WHITE\nconst XP_BAR_OUTLINE_COLOR = \"black\";\nconst XP_BAR_OUTLINE_WIDTH = 2;\n\nconst AGE_FONT_SIZE = 24;\nconst AGE_TEXT_COLOR = \"white\";\nconst AGE_TEXT_OUTLINE_COLOR = \"black\";\nconst AGE_TEXT_OUTLINE_WIDTH = 4;\n\n// --- Drawing Functions ---\n\n/**\n * Main drawing function for the game canvas.\n * @param {CanvasRenderingContext2D} ctx - The 2D rendering context of the canvas.\n * @param {HTMLCanvasElement} canvas - The game canvas element.\n * @param {object} players - Object containing all player data.\n * @param {string} myId - The ID of the local player.\n * @param {object} resources - Object containing all resource data.\n * @param {number} cameraX - The camera's current X position.\n * @param {number} cameraY - The camera's current Y position.\n * @param {number} deltaTime - Time elapsed since the last frame in seconds.\n * @param {number} currentPing - Current network ping in milliseconds.\n * @param {number} chatBubbleDuration - Duration for chat bubbles to display.\n * @param {string|null} topKillerId - The ID of the current top killer, or null if none.\n */\nexport function draw(ctx, canvas, players, myId, resources, cameraX, cameraY, deltaTime, currentPing, chatBubbleDuration, topKillerId) {\n    // Clear canvas background with world border color\n    ctx.fillStyle = worldBorderColor;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const me = players[myId];\n    // If 'me' is dead, we still want to draw the world where they died,\n    // but we might not want to update their visual position or trail.\n    // The main menu will cover the screen, so the game world behind it\n    // can just stay static.\n    // The check for `me.visualX === undefined` is still important for initial load.\n    if (!me || me.visualX === undefined) {\n        // If the player object isn't fully initialized yet, draw a static background\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        return; // Exit early if player data isn't ready\n    }\n\n\n    // Player visual interpolation\n    const interpFactor = 1 - Math.exp(-PLAYER_SMOOTHING_FACTOR * deltaTime);\n    const now = Date.now(); // Get current time once per frame for consistent timing\n\n    for (const id in players) {\n        const p = players[id];\n        if (p.visualX !== undefined) {\n            // Only update visual position and trail if player is NOT dead\n            if (!p.isDead) {\n                p.trail.push({ x: p.x, y: p.y });\n                if (p.trail.length > TRAIL_LENGTH) {\n                    p.trail.shift();\n                }\n                p.visualX += (p.x - p.visualX) * interpFactor;\n                p.visualY += (p.y - p.visualY) * interpFactor;\n                p.visualAngle = lerpAngle(p.visualAngle, p.angle, interpFactor);\n            } else {\n                // If player is dead, clear their trail and keep their visual position static\n                p.trail = [];\n                // Their visualX/Y should remain at the death spot, which is handled by not updating them here.\n            }\n            \n            if (p.isSwinging && now - p.swingStartTime > SWING_DURATION) {\n                p.isSwinging = false;\n                p.currentSwingingHand = null;\n            }\n\n            // Apply decay to player damage wiggle (only if currently wiggling)\n            if (p.damageWiggleX !== 0 || p.damageWiggleY !== 0) {\n                const decayFactor = Math.pow(PLAYER_DAMAGE_WIGGLE_DECAY_RATE, deltaTime * 60); // decay per second\n                p.damageWiggleX *= decayFactor;\n                p.damageWiggleY *= decayFactor;\n                // Snap to zero if very small to prevent indefinite tiny wiggles\n                if (Math.abs(p.damageWiggleX) < 0.1) p.damageWiggleX = 0;\n                if (Math.abs(p.damageWiggleY) < 0.1) p.damageWiggleY = 0;\n            }\n            \n            // Handle chat message fade out\n            if (p.lastMessage && (now - p.messageDisplayTime > chatBubbleDuration)) {\n                p.lastMessage = ''; // Clear message after duration\n                p.messageDisplayTime = 0;\n            }\n        }\n    }\n\n    // --- Resource wiggle decay logic is handled in main.js's update function ---\n\n    // Translate canvas for camera view\n    ctx.save();\n    ctx.translate(-cameraX, -cameraY);\n\n    // Draw world background and grid\n    ctx.fillStyle = backgroundColor;\n    ctx.fillRect(0, 0, worldWidth, worldHeight);\n    drawGrid(ctx, canvas, cameraX, cameraY, worldWidth, worldHeight, gridSize, gridColor);\n\n    // --- Corrected Drawing Order: Player Bodies/Names/Health -> Resources ---\n\n    // 1. Draw Player Bodies (without names/health - these will be drawn later)\n    // This ensures player base visuals are drawn first\n    for (const id in players) {\n        const p = players[id];\n        // Only draw player if they are not dead OR if they are dead but still within the hide delay\n        if (!p.isDead || (p.isDead && (now - p.deathTime < DEAD_PLAYER_HIDE_DELAY))) {\n            drawPlayer(ctx, p, now); // Pass 'now' for hit flash\n        }\n    }\n\n    // 2. Draw ALL Resources (Trees, Bushes, Stones) using their sprites\n    // Resources are drawn AFTER players, so they appear on top\n    for (const id in resources) {\n        drawResource(ctx, resources[id], RESOURCE_DRAW_SIZE, RESOURCE_OUTLINE_COLOR, RESOURCE_OUTLINE_WIDTH);\n    }\n\n    // 3. Draw Player Names and Health Bars AND Chat Bubbles (these should always be on top of everything else)\n    for (const id in players) {\n        const p = players[id];\n        // Only draw player overlay if they are not dead OR if they are the top killer and alive (for skull icon)\n        if (!p.isDead) { // If player is alive, draw their overlay\n            drawPlayerOverlay(ctx, p, now, chatBubbleDuration, topKillerId); // Pass now, duration, and topKillerId\n        } else if (p.isDead && (now - p.deathTime < DEAD_PLAYER_HIDE_DELAY)) {\n             // For recently dead players, you might still want names, but not health bars\n             // For simplicity, let's keep overlays only for living players.\n        }\n    }\n\n    ctx.restore(); // Restore context after camera translation\n\n    // Draw UI elements (not affected by camera)\n    // Only draw minimap, ping, and ageing UI if the player is NOT dead.\n    // This prevents them from showing when the main menu is up.\n    if (me && !me.isDead) { // Ensure 'me' exists before checking isDead\n        drawMinimap(ctx, canvas, players, myId, worldWidth, worldHeight); // Added worldWidth/Height as parameters for drawMinimap\n        drawPingCounter(ctx, canvas, currentPing, PING_FONT_SIZE, PING_TEXT_COLOR, PING_BACKGROUND_COLOR, PING_BORDER_RADIUS, PING_PADDING_X, PING_PADDING_Y);\n        // Draw Ageing System UI\n        drawAgeingUI(ctx, canvas, me);\n    }\n    // Hotbar and WeaponSelectionUI are drawn in main.js loop, so no calls here.\n}\n\n// Player body drawing (now with damage visuals, without name/health bar)\nfunction drawPlayer(ctx, p, now) {\n    ctx.save();\n\n    // Draw player trail\n    if (p.trail) {\n        p.trail.forEach((trailPoint, index) => {\n            const alpha = (index / TRAIL_LENGTH) * TRAIL_MAX_ALPHA;\n            ctx.globalAlpha = alpha;\n            ctx.beginPath();\n            ctx.ellipse(trailPoint.x, trailPoint.y, playerBodyRadiusX, playerBodyRadiusY, 0, 0, Math.PI * 2);\n            ctx.fillStyle = playerFillColor;\n            ctx.fill();\n        });\n    }\n\n    // Determine current player color and opacity based on hit flash\n    const timeSinceDamage = now - p.lastDamageTime;\n    let currentColor = playerFillColor;\n    let currentOutlineColor = playerOutlineColor;\n    let currentAlpha = 1.0;\n\n    if (timeSinceDamage < HIT_FLASH_DURATION) {\n        // Apply hit flash color and opacity\n        currentColor = HIT_FLASH_COLOR;\n        currentOutlineColor = HIT_FLASH_COLOR;\n        currentAlpha = HIT_FLASH_OPACITY;\n    } else if (p.isDead) {\n        currentAlpha = 0.5; // Half opacity when dead\n    }\n    // Otherwise, it remains the default playerFillColor/playerOutlineColor and 1.0 alpha\n\n    ctx.globalAlpha = currentAlpha;\n\n    // Apply wiggle translation\n    ctx.translate(p.visualX + p.damageWiggleX, p.visualY + p.damageWiggleY);\n    ctx.rotate(p.visualAngle);\n\n    ctx.shadowColor = \"rgba(0,0,0,0.6)\";\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 5;\n    ctx.shadowOffsetY = 5;\n    ctx.fillStyle = currentColor; // Use determined color\n    ctx.strokeStyle = currentOutlineColor; // Use determined color\n    ctx.lineWidth = playerOutlineWidth;\n\n    let handForwardOffsetRight = handForwardOffset;\n    let handForwardOffsetLeft = handForwardOffset;\n    let handSideOffsetRight = handSideOffset;\n    let handSideOffsetLeft = handSideOffset;\n\n\n    if (p.isSwinging && !p.isDead) {\n        const swingProgress = (now - p.swingStartTime) / SWING_DURATION;\n        const punchProgress = Math.sin(swingProgress * Math.PI);\n\n        if (p.currentSwingingHand === 'right') {\n            handForwardOffsetRight += SWING_REACH * punchProgress;\n            handSideOffsetRight -= (handRadius * SWING_INWARD_AMOUNT) * punchProgress;\n        } else if (p.currentSwingingHand === 'left') {\n            handForwardOffsetLeft += SWING_REACH * punchProgress;\n            handSideOffsetLeft -= (handRadius * SWING_INWARD_AMOUNT) * punchProgress;\n        }\n    }\n\n    // Draw right hand\n    ctx.beginPath();\n    ctx.arc(handForwardOffsetRight, handSideOffsetRight, handRadius, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    // Draw left hand\n    ctx.beginPath();\n    ctx.arc(handForwardOffsetLeft, -handSideOffsetLeft, handRadius, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    // Draw oval body\n    ctx.beginPath();\n    ctx.ellipse(0, 0, playerBodyRadiusX, playerBodyRadiusY, 0, 0, Math.PI * 2);\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.restore();\n}\n\n// Function for drawing player name and health bar (always on top)\nfunction drawPlayerOverlay(ctx, p, now, chatBubbleDuration, topKillerId) { // Added topKillerId parameter\n    // Only draw health bar, name, and chat bubble if player is NOT dead\n    if (p.isDead) return;\n\n    // Draw Health Bar (always drawn relative to world coordinates, not player translation)\n    // Note: p.visualX/Y are used here, they already account for camera and smoothing.\n    if (typeof p.health === 'number') {\n        const healthBarX = p.visualX - healthBarWidth / 2;\n        const healthBarY = p.visualY + playerBodyRadiusY + healthBarVerticalOffsetFromPlayerBottom;\n        const healthPercentage = Math.max(0, p.health / MAX_HEALTH);\n        if (healthPercentage > 0) { // Only draw if health > 0\n            ctx.globalAlpha = 1.0;\n            ctx.fillStyle = healthBarBackgroundColor;\n            ctx.beginPath();\n            ctx.roundRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight, healthBarBorderRadius);\n            ctx.fill();\n\n            ctx.fillStyle = interpolateColor(lowHealthColor, fullHealthColor, healthPercentage);\n            ctx.beginPath();\n            ctx.roundRect(healthBarX, healthBarY, healthBarWidth * healthPercentage, healthBarHeight, healthBarBorderRadius);\n            ctx.fill();\n\n            ctx.strokeStyle = healthBarOutlineColor;\n            ctx.lineWidth = healthBarOutlineWidth;\n            ctx.beginPath();\n            ctx.roundRect(healthBarX, healthBarY, healthBarWidth, healthBarHeight, healthBarBorderRadius);\n            ctx.stroke();\n            ctx.globalAlpha = 1.0\n        }\n    }\n    // Draw Player Name\n    ctx.globalAlpha = 1.0;\n    ctx.font = \"bold 28px Arial\";\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"bottom\";\n    ctx.strokeStyle = \"black\";\n    ctx.lineWidth = 4;\n    ctx.strokeText(p.name || \"Unnamed\", p.visualX, p.visualY - playerBodyRadiusY - 25);\n    ctx.fillStyle = \"white\";\n    ctx.fillText(p.name || \"Unnamed\", p.visualX, p.visualY - playerBodyRadiusY - 25);\n    ctx.globalAlpha = 1.0;\n\n    // NEW: Draw skull image if this player is the top killer and the image is loaded\n    if (topKillerId && p.id === topKillerId && (p.inventory.kills || 0) > 0 && skullImage.complete && skullImage.naturalWidth > 0) {\n        const skullWidth = 24; // Adjust size of the skull\n        const skullHeight = 24; // Adjust size of the skull\n\n        // Measure the name text to position the skull correctly\n        const nameMetrics = ctx.measureText(p.name || \"Unnamed\");\n        // Position the skull to the right of the player's name\n        const skullDrawX = p.visualX + nameMetrics.width / 2 + 5; // 5px padding to the right of the name\n        const skullDrawY = (p.visualY - playerBodyRadiusY - 25) - skullHeight / 2; // Vertically center with the name's baseline\n\n        ctx.drawImage(skullImage, skullDrawX, skullDrawY, skullWidth, skullHeight);\n    }\n\n    // NEW: Draw chat message bubble\n    drawChatMessageBubble(ctx, p, now, chatBubbleDuration);\n}\n\n// NEW: Function to draw a chat message bubble above the player's head\nfunction drawChatMessageBubble(ctx, p, now, chatBubbleDuration) {\n    if (!p.lastMessage || p.isDead) return; // Don't draw if dead\n\n    const timeElapsed = now - p.messageDisplayTime;\n    if (timeElapsed > chatBubbleDuration) return; // Message has expired\n\n    // Calculate fade-out alpha\n    let bubbleAlpha = 1.0;\n    const fadeStartTime = chatBubbleDuration * 0.7; // Start fading out at 70% of duration\n    if (timeElapsed > fadeStartTime) {\n        bubbleAlpha = 1.0 - ((timeElapsed - fadeStartTime) / (chatBubbleDuration - fadeStartTime));\n        bubbleAlpha = Math.max(0, Math.min(1, bubbleAlpha)); // Clamp between 0 and 1\n    }\n\n    if (bubbleAlpha <= 0) return; // Don't draw if fully transparent\n\n    ctx.save();\n    ctx.globalAlpha = bubbleAlpha;\n\n    ctx.font = `${CHAT_BUBBLE_FONT_SIZE}px Arial`;\n    ctx.textAlign = \"center\"; // Already centered horizontally\n    ctx.textBaseline = \"middle\"; // CORRECTED: This will center the text vertically in the bubble\n\n    // Measure text to determine bubble size\n    const textMetrics = ctx.measureText(p.lastMessage);\n    const textWidth = textMetrics.width;\n    const textHeight = CHAT_BUBBLE_FONT_SIZE; // Approximate height based on font size\n\n    const bubbleWidth = textWidth + CHAT_BUBBLE_PADDING_X * 2;\n    const bubbleHeight = textHeight + CHAT_BUBBLE_PADDING_Y * 2;\n\n    // Position the bubble above the player\n    const bubbleX = p.visualX - bubbleWidth / 2;\n    // Calculation for bubbleY now uses CHAT_BUBBLE_OFFSET_Y for consistent placement above player\n    const bubbleY = p.visualY - playerBodyRadiusY - CHAT_BUBBLE_OFFSET_Y - bubbleHeight; \n\n    // Draw bubble background\n    ctx.fillStyle = CHAT_BUBBLE_BACKGROUND_COLOR;\n    ctx.beginPath();\n    ctx.roundRect(bubbleX, bubbleY, bubbleWidth, bubbleHeight, CHAT_BUBBLE_BORDER_RADIUS);\n    ctx.fill();\n\n    // Draw text - centered horizontally and vertically within the bubble's drawing area\n    // For textBaseline \"middle\", the y-coordinate should be the vertical center of the text area.\n    ctx.fillStyle = CHAT_BUBBLE_TEXT_COLOR;\n    ctx.fillText(p.lastMessage, p.visualX, bubbleY + (bubbleHeight / 2)); \n\n    ctx.restore(); // Restore globalAlpha and other settings\n}\n\n\n// Resource drawing (uses getResSprite from resourceDesigns.js)\nfunction drawResource(ctx, resource, resourceDrawSize, resourceOutlineColor, resourceOutlineWidth) {\n    ctx.save();\n\n    // Apply wiggle translation\n    ctx.translate(resource.x + resource.xWiggle, resource.y + resource.yWiggle);\n\n    ctx.globalAlpha = 1.0;\n\n    // Apply shadow BEFORE drawing the sprite so it's applied to the sprite itself\n    ctx.shadowColor = \"rgba(0,0,0,0.6)\";\n    ctx.shadowBlur = 10;\n    ctx.shadowOffsetX = 5;\n    ctx.shadowOffsetY = 5;\n\n    // Retrieve the sprite from resourceDesigns.js, passing required parameters\n    const resourceSprite = getResSprite(resource, RESOURCE_DRAW_SIZE, RESOURCE_OUTLINE_COLOR, RESOURCE_OUTLINE_WIDTH);\n    if (resourceSprite) { // Ensure sprite exists before drawing\n        // Draw the sprite, centering it based on its own dimensions\n        ctx.drawImage(resourceSprite, -resourceSprite.width / 2, -resourceSprite.height / 2);\n    }\n\n    ctx.restore(); // Restore context to remove transformations and shadow\n}\n\n// Grid drawing (unchanged)\nfunction drawGrid(ctx, canvas, cameraX, cameraY, worldWidth, worldHeight, gridSize, gridColor) {\n    ctx.strokeStyle = gridColor;\n    ctx.lineWidth = 1;\n    const startX = Math.floor(cameraX / gridSize) * gridSize;\n    const endX = startX + canvas.width + gridSize;\n    const startY = Math.floor(cameraY / gridSize) * gridSize;\n    const endY = startY + canvas.height + gridSize;\n    for (let x = startX; x < endX; x += gridSize) {\n        if (x >= 0 && x <= worldWidth) {\n            ctx.beginPath();\n            ctx.moveTo(x, startY);\n            ctx.lineTo(x, endY);\n            ctx.stroke();\n        }\n    }\n    for (let y = startY; y < endY; y += gridSize) {\n        if (y >= 0 && y <= worldHeight) {\n            ctx.beginPath();\n            ctx.moveTo(startX, y);\n            ctx.lineTo(endX, y);\n            ctx.stroke();\n        }\n    }\n}\n\n// Ping Counter drawing (NOW TOP CENTER)\nfunction drawPingCounter(ctx, canvas, currentPing, PING_FONT_SIZE, PING_TEXT_COLOR, PING_BACKGROUND_COLOR, PING_BORDER_RADIUS, PING_PADDING_X, PING_PADDING_Y) {\n    const pingText = `${currentPing}ms`;\n    ctx.font = `bold ${PING_FONT_SIZE}px Arial`;\n    \n    // Measure text to create a background rectangle\n    const textMetrics = ctx.measureText(pingText);\n    const textWidth = textMetrics.width;\n    // Approximate height, typically PING_FONT_SIZE * 1.2 is a good estimate for text height\n    const textHeight = PING_FONT_SIZE * 1.2; \n\n    const paddingX = PING_PADDING_X;\n    const paddingY = PING_PADDING_Y;\n\n    const panelWidth = textWidth + 2 * paddingX;\n    const panelHeight = textHeight + 2 * paddingY;\n    \n    // Position the panel in the top center\n    const panelX = (canvas.width / 2) - (panelWidth / 2);\n    const panelY = PING_PADDING_Y; // Keep it at the top with a padding offset\n\n    // Draw background rectangle\n    ctx.fillStyle = PING_BACKGROUND_COLOR;\n    ctx.beginPath();\n    ctx.roundRect(panelX, panelY, panelWidth, panelHeight, PING_BORDER_RADIUS);\n    ctx.fill();\n\n    // Draw ping text\n    ctx.fillStyle = PING_TEXT_COLOR;\n    ctx.textAlign = \"center\"; // Center horizontally within the panel\n    ctx.textBaseline = \"middle\"; // Center vertically within the panel\n    ctx.fillText(pingText, canvas.width / 2, panelY + panelHeight / 2);\n}\n\n\n/**\n * Draws a chat bubble above a player.\n */\n// This function is now internal to drawing.js and called by drawPlayerOverlay\n// No changes needed here as it's already defined above.\n\n\n// Function to draw the player's XP bar and age\nexport function drawAgeingUI(ctx, canvas, player) {\n    if (!player || player.isDead) return; // Don't draw if player is dead\n\n    // Calculate XP bar position (bottom-center)\n    const xpBarX = (canvas.width / 2) - (XP_BAR_WIDTH / 2);\n    // Adjusted XP_BAR_Y to place it higher than the hotbar but still near bottom\n    const xpBarY = canvas.height - XP_BAR_HEIGHT - 90; // Moved from 30 to 90\n\n    // --- Draw XP Bar Background ---\n    ctx.fillStyle = XP_BAR_BACKGROUND_COLOR;\n    ctx.beginPath();\n    ctx.roundRect(xpBarX, xpBarY, XP_BAR_WIDTH, XP_BAR_HEIGHT, XP_BAR_BORDER_RADIUS);\n    ctx.fill();\n\n    // --- Create a clipping path for the XP bar to ensure rounded fill ---\n    ctx.save(); // Save context before clipping\n    ctx.beginPath();\n    ctx.roundRect(xpBarX, xpBarY, XP_BAR_WIDTH, XP_BAR_HEIGHT, XP_BAR_BORDER_RADIUS);\n    ctx.clip(); // Apply the rounded rectangle as a clipping mask\n\n    // Calculate XP percentage\n    let xpPercentage = 0;\n    if (player.xpToNextAge > 0) {\n        xpPercentage = player.xp / player.xpToNextAge;\n        xpPercentage = Math.max(0, Math.min(xpPercentage, 1)); // Clamp between 0 and 1\n    }\n\n    // --- Draw XP Bar Fill (white) ---\n    // This fillRect will now be clipped by the rounded path\n    ctx.fillStyle = XP_BAR_FILL_COLOR;\n    ctx.fillRect(xpBarX, xpBarY, XP_BAR_WIDTH * xpPercentage, XP_BAR_HEIGHT);\n\n    ctx.restore(); // Restore context to remove the clipping path\n\n    // --- Draw XP Bar Outline ---\n    ctx.strokeStyle = XP_BAR_OUTLINE_COLOR;\n    ctx.lineWidth = XP_BAR_OUTLINE_WIDTH;\n    ctx.beginPath();\n    ctx.roundRect(xpBarX, xpBarY, XP_BAR_WIDTH, XP_BAR_HEIGHT, XP_BAR_BORDER_RADIUS);\n    ctx.stroke();\n\n    // Draw Age Text (e.g., \"Age 0\") ABOVE the bar\n    ctx.font = `bold ${AGE_FONT_SIZE}px Arial`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"bottom\"; // Align to the bottom of the text block\n\n    const ageText = `Age ${player.age}`;\n    const ageTextX = xpBarX + XP_BAR_WIDTH / 2; // Centered above the bar\n    const ageTextY = xpBarY - 10; // 10px above the bar\n\n    ctx.strokeStyle = AGE_TEXT_OUTLINE_COLOR;\n    ctx.lineWidth = AGE_TEXT_OUTLINE_WIDTH;\n    ctx.strokeText(ageText, ageTextX, ageTextY);\n    ctx.fillStyle = AGE_TEXT_COLOR;\n    ctx.fillText(ageText, ageTextX, ageTextY);\n}\n","// hotbar.js - Manages and renders the in-game hotbar\n\n// --- Hotbar State ---\nconst NUM_SLOTS = 9; // Fixed number of hotbar slots\nlet hotbar = Array(NUM_SLOTS).fill(null); // Initialize all slots as empty\nlet activeSlotIndex = 0; // Declared with let, can be modified within this module\n\n// --- Hotbar Visual Constants (Client-Side) ---\nconst HOTBAR_SLOT_SIZE = 60;\nconst HOTBAR_PADDING = 10;\nconst HOTBAR_SPACING = 5;\nconst HOTBAR_BACKGROUND_COLOR = 'rgba(0, 0, 0, 0.4)';\nconst HOTBAR_BORDER_COLOR = 'rgba(255, 255, 255, 0.2)';\nconst HOTBAR_ACTIVE_BORDER_COLOR = '#fff700';\nconst HOTBAR_BORDER_WIDTH = 2;\nconst HOTBAR_ACTIVE_BORDER_WIDTH = 4;\nconst HOTBAR_KEY_FONT_SIZE = 12;\nconst HOTBAR_KEY_COLOR = 'white';\nconst HOTBAR_ITEM_TEXT_COLOR = 'white';\nconst HOTBAR_ITEM_FONT_SIZE = 12;\n\nconst PLACEHOLDER_ICONS = {\n    'axe': '⛏️',\n    'wood_wall': '🧱',\n    'food_ration': '🍖',\n    'sword': '⚔️'\n};\n\n// Load 'Press Start 2P' font\nconst fontLink = document.createElement('link');\nfontLink.href = 'https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap';\nfontLink.rel = 'stylesheet';\ndocument.head.appendChild(fontLink);\n\nconst applyFont = () => {\n    const style = document.createElement('style');\n    style.textContent = `\n        canvas {\n            font-family: 'Press Start 2P', monospace;\n        }\n    `;\n    document.head.appendChild(style);\n};\napplyFont();\n\n/**\n * Initializes the hotbar with some default items.\n */\nexport function initHotbar() {\n    addItemToHotbar({ id: 'axe1', type: 'axe', iconSrc: 'axe', name: 'Stone Axe', quantity: 1 });\n    addItemToHotbar({ id: 'wall1', type: 'wood_wall', iconSrc: 'wood_wall', name: 'Wood Wall', quantity: 5 });\n    addItemToHotbar({ id: 'food1', type: 'food_ration', iconSrc: 'food_ration', name: 'Ration', quantity: 10 });\n    addItemToHotbar({ id: 'sword1', type: 'sword', iconSrc: 'sword', name: 'Iron Sword', quantity: 1 });\n    console.log(\"Hotbar initialized:\", hotbar);\n}\n\n/**\n * Draws the hotbar on the canvas.\n * @param {CanvasRenderingContext2D} ctx - The 2D rendering context of the canvas.\n * @param {HTMLCanvasElement} canvas - The HTML canvas element.\n */\nexport function drawHotbar(ctx, canvas) {\n    // Filter out null slots to only draw visible items\n    const visibleSlots = hotbar.map((item, index) => item ? index : null).filter(i => i !== null);\n    const numVisible = visibleSlots.length;\n    if (numVisible === 0) return;\n\n    // Calculate total width and starting position to center the hotbar\n    const totalWidth = numVisible * HOTBAR_SLOT_SIZE + (numVisible - 1) * HOTBAR_SPACING;\n    const startX = (canvas.width / 2) - (totalWidth / 2);\n    const startY = canvas.height - HOTBAR_SLOT_SIZE - HOTBAR_PADDING;\n\n    // Iterate over visible slots and draw each one\n    visibleSlots.forEach((i, visibleIndex) => {\n        const slotX = startX + (visibleIndex * (HOTBAR_SLOT_SIZE + HOTBAR_SPACING));\n        const slotY = startY;\n        const item = hotbar[i];\n        const isCurrentActive = (i === activeSlotIndex);\n\n        ctx.save(); // Save the current drawing state\n\n        // Apply general hotbar slot styling\n        ctx.globalAlpha = 0.95;\n        ctx.fillStyle = HOTBAR_BACKGROUND_COLOR;\n        ctx.strokeStyle = isCurrentActive ? HOTBAR_ACTIVE_BORDER_COLOR : HOTBAR_BORDER_COLOR;\n        ctx.lineWidth = isCurrentActive ? HOTBAR_ACTIVE_BORDER_WIDTH : HOTBAR_BORDER_WIDTH;\n\n        // Draw the rounded rectangle for the slot\n        ctx.beginPath();\n        ctx.roundRect(slotX, slotY, HOTBAR_SLOT_SIZE, HOTBAR_SLOT_SIZE, 10);\n        ctx.fill();\n        ctx.stroke();\n\n        // Draw item icon (emoji placeholder)\n        ctx.font = `${HOTBAR_SLOT_SIZE * 0.5}px 'Press Start 2P'`;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = 'white';\n        ctx.fillText(PLACEHOLDER_ICONS[item.iconSrc] || '❓', slotX + HOTBAR_SLOT_SIZE / 2, slotY + HOTBAR_SLOT_SIZE / 2);\n\n        // Draw item quantity if greater than 1\n        if (item.quantity > 1) {\n            ctx.font = `${HOTBAR_ITEM_FONT_SIZE}px 'Press Start 2P'`;\n            ctx.textAlign = 'right';\n            ctx.textBaseline = 'bottom';\n            ctx.fillStyle = HOTBAR_ITEM_TEXT_COLOR;\n            ctx.fillText(item.quantity, slotX + HOTBAR_SLOT_SIZE - 4, slotY + HOTBAR_SLOT_SIZE - 4);\n        }\n\n        // Draw slot number (1-9)\n        ctx.font = `${HOTBAR_KEY_FONT_SIZE}px 'Press Start 2P'`;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = HOTBAR_KEY_COLOR;\n        ctx.fillText(`${i + 1}`, slotX + 4, slotY + 4);\n\n        ctx.restore(); // Restore the previous drawing state\n    });\n}\n\n/**\n * Handles keyboard input for hotbar selection.\n * @param {KeyboardEvent} e - The keyboard event.\n */\nexport function handleHotbarInput(e) {\n    // Prevent hotbar input if an input field is active\n    if (document.activeElement.tagName === 'INPUT') return;\n    const key = e.key;\n    const numKey = parseInt(key, 10);\n    // If a number key from 1 to NUM_SLOTS is pressed, set active slot\n    if (numKey >= 1 && numKey <= NUM_SLOTS) {\n        setActiveSlotIndex(numKey - 1); // Use the new setter function\n        e.preventDefault(); // Prevent default browser behavior (e.g., scrolling)\n    }\n}\n\n/**\n * Adds an item to the hotbar. If an item of the same type exists and has quantity,\n * it increments the quantity. Otherwise, it finds an empty slot.\n * @param {object} item - The item to add. Must have `id`, `type`, `iconSrc`, `name`, `quantity`.\n * @returns {boolean} True if the item was added, false otherwise.\n */\nexport function addItemToHotbar(item) {\n    if (!item || !item.type) return false;\n\n    // Try to stack with an existing item of the same type\n    for (let i = 0; i < NUM_SLOTS; i++) {\n        const existingItem = hotbar[i];\n        if (existingItem && existingItem.type === item.type && typeof existingItem.quantity === 'number') {\n            existingItem.quantity += item.quantity;\n            return true;\n        }\n    }\n\n    // Find an empty slot if no stacking occurred\n    const emptyIndex = hotbar.indexOf(null);\n    if (emptyIndex !== -1) {\n        hotbar[emptyIndex] = { ...item }; // Add a copy of the item\n        return true;\n    }\n    return false; // No space or existing stackable item\n}\n\n/**\n * Returns the item currently in the active hotbar slot.\n * @returns {object|null} The active item object, or null if the slot is empty.\n */\nexport function getActiveItem() {\n    return hotbar[activeSlotIndex];\n}\n\n/**\n * Removes a specified quantity from the active item. If quantity falls to 0 or less,\n * the slot becomes empty.\n * @param {number} quantityToRemove - The amount to remove. Defaults to 1.\n * @returns {boolean} True if items were removed, false otherwise (e.g., not enough quantity).\n */\nexport function removeActiveItem(quantityToRemove = 1) {\n    const item = hotbar[activeSlotIndex];\n    if (!item) return false; // No item in the active slot\n\n    if (typeof item.quantity === 'number') {\n        if (item.quantity >= quantityToRemove) {\n            item.quantity -= quantityToRemove;\n            if (item.quantity <= 0) {\n                hotbar[activeSlotIndex] = null; // Clear slot if quantity is zero or less\n            }\n            return true;\n        }\n        return false; // Not enough quantity to remove\n    }\n\n    // If item has no quantity property, just remove it\n    hotbar[activeSlotIndex] = null;\n    return true;\n}\n\n/**\n * Sets the active hotbar slot index.\n * This function is exposed to allow other modules to change the active slot.\n * @param {number} index - The new active slot index.\n */\nexport function setActiveSlotIndex(index) {\n    if (index >= 0 && index < NUM_SLOTS) {\n        activeSlotIndex = index;\n    } else {\n        console.warn(`Attempted to set activeSlotIndex to out-of-bounds value: ${index}`);\n    }\n}\n\n// Add roundRect for canvas context if not available (polyfill)\nif (!CanvasRenderingContext2D.prototype.roundRect) {\n    CanvasRenderingContext2D.prototype.roundRect = function (x, y, width, height, radius) {\n        if (typeof radius === 'number') radius = { tl: radius, tr: radius, br: radius, bl: radius };\n        else radius = Object.assign({ tl: 0, tr: 0, br: 0, bl: 0 }, radius);\n        this.beginPath();\n        this.moveTo(x + radius.tl, y);\n        this.lineTo(x + width - radius.tr, y);\n        this.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n        this.lineTo(x + width, y + height - radius.br);\n        this.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n        this.lineTo(x + radius.bl, y + height);\n        this.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n        this.lineTo(x, y + radius.tl);\n        this.quadraticCurveTo(x, y, x + radius.tl, y);\n        this.closePath();\n        return this;\n    };\n}\n\n// Export hotbar and the new setter function\nexport { hotbar, activeSlotIndex }; // Removed activeSlotIndex direct export\n","let leaderboardContainer;\nlet leaderboardList;\n\nexport function initLeaderboard() {\n    leaderboardContainer = document.getElementById('leaderboardContainer');\n    leaderboardList = document.getElementById('leaderboardList');\n\n    if (!leaderboardContainer || !leaderboardList) {\n        console.error(\"leaderboard not loading\");\n        return;\n    }\n}\n\n/**\n * @param {object} players \n * @param {string} myId \n */\nexport function updateLeaderboard(players, myId) {\n    if (!leaderboardList) {\n        console.warn(\"lLeaderboard list\");\n        return;\n    }\n\n    const sortedPlayers = Object.values(players)\n        .filter(player => !player.isDead)\n        .sort((a, b) => (b.inventory.gold || 0) - (a.inventory.gold || 0));\n\n    leaderboardList.innerHTML = '';\n\n    // Add top 10 players to the list\n    for (let i = 0; i < Math.min(sortedPlayers.length, 10); i++) {\n        const player = sortedPlayers[i];\n        const listItem = document.createElement('li');\n\n        const rankSpan = document.createElement('span');\n        rankSpan.classList.add('rank');\n        rankSpan.textContent = `${i + 1}.`;\n\n        const nameSpan = document.createElement('span');\n        nameSpan.classList.add('name');\n        nameSpan.textContent = (player.name || \"Unnamed\");\n        \n        if (player.id === myId) {\n            nameSpan.style.fontWeight = 'bold';\n            nameSpan.style.color = 'white';\n        } else {\n            nameSpan.style.color = '#AAAAAA';\n        }\n\n        const goldSpan = document.createElement('span');\n        goldSpan.classList.add('gold');\n        goldSpan.textContent = Math.floor(player.inventory.gold || 0);\n\n        listItem.appendChild(rankSpan);\n        listItem.appendChild(nameSpan);\n        listItem.appendChild(goldSpan);\n\n        leaderboardList.appendChild(listItem);\n    }\n}\n","// --- Global Variables ---\nlet socket;\nexport let myId; // Export myId\nexport let players = {}; // Export players\nexport let resources = {}; // Export resources\nlet playerName = \"\";\n\n// --- HTML Elements ---\nconst canvas = document.getElementById(\"gameCanvas\");\nconst ctx = canvas.getContext(\"2d\");\nconst mainMenu = document.getElementById(\"mainMenu\");\nconst playerNameInput = document.getElementById(\"playerNameInput\");\nconst startGameButton = document.getElementById(\"startGameButton\");\nconst mainMenuBackground = document.getElementById('mainMenuBackground'); // Get reference to the background div\n\n// Local Chat UI Element\nlet localChatInput;\n\n// Resource Counter Elements\nconst resourceCounterContainer = document.getElementById('resourceCounterContainer');\nconst leaderboardContainer = document.getElementById('leaderboardContainer');\n\n\n// --- Game Constants ---\nexport const worldWidth = 10000; // Export\nexport const worldHeight = 10000; // Export\nexport const MAX_HEALTH = 100; // Export\nexport const cameraLerpFactor = 0.01; // Export\nexport const PLAYER_SMOOTHING_FACTOR = 15; // Export\nexport const TRAIL_LENGTH = 10; // Export\nexport const TRAIL_MAX_ALPHA = 0.3; // Export\nexport const playerBodyRadiusX = 30; // Export\nexport const playerBodyRadiusY = 30; // Export\nexport const handRadius = 14; // Export\nexport const handSideOffset = playerBodyRadiusY - (handRadius * 0.3); // Export\nexport const handForwardOffset = playerBodyRadiusX * 0.6; // Export\nexport const SWING_DURATION = 250; // Export\nexport const SWING_REACH = 40;     // Export\nexport const SWING_INWARD_AMOUNT = 0.5; // Export\nexport const healthBarWidth = 80; // Export\nexport const healthBarHeight = 12; // Export\nexport const healthBarVerticalOffsetFromPlayerBottom = 15; // Export\nexport const healthBarBorderRadius = 6; // Export\nexport const fullHealthColor = \"#5CB85C\"; // Export\nexport const lowHealthColor = \"#FF0000\"; // Export\nexport const healthBarBackgroundColor = \"rgba(128, 128, 128, 0.5)\"; // Export\nexport const healthBarOutlineColor = \"black\"; // Export\nexport const healthBarOutlineWidth = 2; // Export\n\n// Aesthetic green colors\nexport const backgroundColor = \"#4a6741\";   // Export\nexport const worldBorderColor = \"#3D8E41\"; // Export\nexport const gridColor = backgroundColor;        // Export\n\nexport const playerFillColor = \"#6f4e37\"; // Export\nexport const playerOutlineColor = \"black\"; // Export\nexport const playerOutlineWidth = 3; // Export\nexport const gridSize = 50; // Export\nexport const minimapSize = 200; // Export\nexport const minimapPadding = 20; // Export\nexport const minimapBackgroundColor = \"rgba(0, 0, 0, 0.5)\"; // Export\nexport const minimapBorderColor = \"#FFF\"; // Export\n\n// Resource Visual Constants\nexport const RESOURCE_TYPES = { // Export\n    WOOD: 'wood',\n    STONE: 'stone',\n    FOOD: 'food',\n    GOLD: 'gold'\n};\n\nexport const RESOURCE_PROPERTIES = {\n    [RESOURCE_TYPES.WOOD]: {\n        collectionAmount: 1,\n        xpReward: 7.5,\n        collisionRadius: 100,\n        hitRadius: 120,\n    },\n    [RESOURCE_TYPES.STONE]: {\n        collectionAmount: 1,\n        xpReward: 7.5,\n        collisionRadius: 100,\n        hitRadius: 120,\n    },\n    [RESOURCE_TYPES.FOOD]: { // Bush properties\n        collectionAmount: 1,\n        xpReward: 7.5,\n        collisionRadius: 70,\n        hitRadius: 90,\n    },\n    [RESOURCE_TYPES.GOLD]: { // Gold properties\n        collectionAmount: 10,\n        xpReward: 15.0,\n        collisionRadius: 100,\n        hitRadius: 120,\n    }\n};\n\nexport const RESOURCE_OUTLINE_COLOR = \"black\"; // Export\nexport const RESOURCE_OUTLINE_WIDTH = 2; // Export\nexport const RESOURCE_DRAW_SIZE = 100; // Export (This is used as tmpScale in resourceDesigns)\n\n// Wiggle Constants for resources\nexport const GATHER_WIGGLE = 10; // Export\n\n// Resource Counter UI Constants (these are handled by HTML/CSS now, but keeping in sync for consistency)\nexport const COUNTER_PADDING = 20; // Export\nexport const COUNTER_LINE_HEIGHT = 30; // Export\nexport const COUNTER_FONT_SIZE = 24; // Export\nexport const COUNTER_TEXT_COLOR = \"white\"; // Export\nexport const COUNTER_BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.6)\"; // Export\nexport const COUNTER_BORDER_RADIUS = 10; // Export\nexport const COUNTER_ICON_SIZE = 20; // Export\n\n// Ping Counter Constants\nexport const PING_INTERVAL = 2000; // Export\nexport const PING_FONT_SIZE = 22; // Export\nexport const PING_TEXT_COLOR = \"white\"; // Export\nexport const PING_BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.6)\"; // Export\nexport const PING_BORDER_RADIUS = 8; // Export\nexport const PING_PADDING_X = 16; // Export\nexport const PING_PADDING_Y = 8; // Export\n\n// Player Damage Visual Constants\nexport const PLAYER_DAMAGE_WIGGLE_STRENGTH = 10; // Export\nexport const PLAYER_DAMAGE_WIGGLE_DECAY_RATE = 0.8; // Export\nexport const HIT_FLASH_DURATION = 150; // Adjusted: How long the hit flash lasts in milliseconds (shorter)\nexport const HIT_FLASH_COLOR = \"#FF0000\"; // The color of the hit flash (Red)\nexport const HIT_FLASH_OPACITY = 0.5; // The opacity of the hit flash\n\n// NEW: Chat Bubble Constants\nexport const CHAT_BUBBLE_DURATION = 5000; // How long a chat message bubble stays visible (5 seconds)\nexport const CHAT_BUBBLE_OFFSET_Y = 80; // Offset from player Y to top of bubble\nexport const CHAT_BUBBLE_FONT_SIZE = 20;\nexport const CHAT_BUBBLE_TEXT_COLOR = \"#CCCCCC\"; // Lighter gray\nexport const CHAT_BUBBLE_BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.7)\";\nexport const CHAT_BUBBLE_PADDING_X = 15;\nexport const CHAT_BUBBLE_PADDING_Y = 10;\nexport const CHAT_BUBBLE_BORDER_RADIUS = 10;\n\n// NEW: Dead Player Hide Delay\nexport const DEAD_PLAYER_HIDE_DELAY = 10000; // 10 seconds in milliseconds\n\n\n// --- Game State Variables ---\nexport let cameraX = 0; // Export\nexport let cameraY = 0; // Export\nlet mouseX = 0;\nlet mouseY = 0;\nconst keys = {};\nlet isLeftMouseDown = false;\nlet isRightMouseDown = false;\nlet lastTime = 0;\nexport let deltaTime = 0; // Export\nexport let currentPing = 0; // Export\nlet pingSendTime = 0;\n\n// --- Helper Functions (Imports) ---\nimport { interpolateColor, lerpAngle, clamp } from './utils.js';\nimport { draw } from './drawing.js';\nimport { initLeaderboard, updateLeaderboard } from './leaderboard.js';\nimport { initHotbar, drawHotbar, handleHotbarInput, addItemToHotbar, setActiveSlotIndex } from './hotbar.js';\nimport { initWeaponSelectionUI, updateWeaponSelectionUI, drawWeaponSelectionUI, handleWeaponSelectionClick } from './weaponSelectionUI.js';\nimport { createDamageText, updateDamageTexts, drawDamageTexts } from './damageText.js';\n\n\n// --- Event Listeners ---\ncanvas.addEventListener(\"mousemove\", (e) => {\n    const rect = canvas.getBoundingClientRect();\n    mouseX = e.clientX - rect.left;\n    mouseY = e.clientY - rect.top;\n});\n\ncanvas.addEventListener('mousedown', (e) => {\n    const me = players[myId];\n    const isChatInputFocused = localChatInput && document.activeElement === localChatInput;\n\n    // First, check if the click was handled by the weapon selection UI (top bar)\n    // Only allow interaction if player is alive and chat is not focused.\n    if (me && !me.isDead && !isChatInputFocused) {\n        const clickHandledByWeaponUI = handleWeaponSelectionClick(e, me, socket);\n        if (clickHandledByWeaponUI) {\n            e.stopPropagation(); // Prevent other click handlers if a weapon slot was clicked\n            return;\n        }\n    }\n\n    // Existing logic for setting mouse button state\n    if (e.button === 0) {\n        isLeftMouseDown = true;\n    } else if (e.button === 2) { // Right mouse button\n        isRightMouseDown = true;\n        e.preventDefault(); // Prevent context menu\n    }\n    \n    // Logic for respawning (applies to both left and right click anywhere on canvas if dead)\n    if (me && me.isDead) {\n        socket.emit('respawn');\n    }\n});\n\ncanvas.addEventListener('mouseup', (e) => {\n    // Reset state for both left and right mouse buttons\n    if (e.button === 0) {\n        isLeftMouseDown = false;\n    } else if (e.button === 2) { // Right mouse button\n        isRightMouseDown = false;\n    }\n});\n\n// Prevent context menu on right-click anywhere on the canvas\ncanvas.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n});\n\n\nstartGameButton.addEventListener(\"click\", startGame);\nplayerNameInput.addEventListener(\"keypress\", (e) => {\n    if (e.key === \"Enter\") startGame();\n});\n\nlet lastEnterPressTime = 0;\nconst ENTER_DEBOUNCE_DELAY = 200; // Milliseconds to wait between 'Enter' presses\n\n/**\n * Toggles the visibility of the local chat input.\n * Also manages pointer events to make it interactive or non-interactive.\n * @param {boolean} show - True to show, false to hide.\n */\nfunction toggleChatInputVisibility(show) {\n    if (localChatInput) {\n        if (show) {\n            localChatInput.value = ''; // Always clear input when opening\n            localChatInput.style.opacity = '1';\n            localChatInput.style.pointerEvents = 'auto';\n            localChatInput.focus();\n            for (const key in keys) {\n                keys[key] = false;\n            }\n            console.log(\"Chat input shown and focused. Player movement stopped.\");\n        } else {\n            localChatInput.style.opacity = '0';\n            localChatInput.style.pointerEvents = 'none';\n            localChatInput.blur();\n            console.log(\"Chat input hidden and unfocused.\");\n        }\n    } else {\n        console.warn(\"toggleChatInputVisibility: localChatInput element is null.\");\n    }\n}\n\n\n// Function to send local chat messages\nfunction sendLocalChatMessage() {\n    console.log(\"sendLocalChatMessage called.\");\n    if (localChatInput) { // Check if element exists\n        const message = localChatInput.value.trim();\n        if (message.length > 0) {\n            console.log(\"Sending message:\", message);\n            socket.emit('local-chat-message', { message: message });\n            localChatInput.value = ''; // Clear the input field\n            toggleChatInputVisibility(false); // Hide the chat input after sending\n        } else {\n            console.log(\"Message is empty, not sending. Hiding chat input.\");\n            toggleChatInputVisibility(false); // Still hide if message is empty\n        }\n    } else {\n        console.warn(\"sendLocalChatMessage: localChatInput element is null.\");\n    }\n}\n\n\n// --- Game Initialization ---\nfunction startGame() {\n    playerName = playerNameInput.value.trim() || \"Player\";\n    mainMenu.style.display = \"none\";\n    // Hide the static background image when game starts\n    if (mainMenuBackground) {\n        mainMenuBackground.style.display = 'none'; // Explicitly hide it\n    }\n    \n    // Show game UI elements\n    if (resourceCounterContainer) resourceCounterContainer.style.display = 'flex';\n    if (leaderboardContainer) leaderboardContainer.style.display = 'block';\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // IMPORTANT: Retrieve and assign chat UI element *here*, after game starts\n    localChatInput = document.getElementById('localChatInput');\n    // Set max length for chat input\n    if (localChatInput) {\n        localChatInput.setAttribute('maxlength', '30'); // Set max length to 30\n    }\n\n    // Initialize chat input to be hidden\n    toggleChatInputVisibility(false); // Ensure it's hidden when game starts\n\n    // Initialize Hotbar and Weapon Selection UI\n    initHotbar();\n    initWeaponSelectionUI();\n\n    // Hotbar click logic (for the bottom hotbar)\n    canvas.addEventListener('click', (e) => {\n        // Ensure game is active, player is alive, and chat is not focused before processing hotbar clicks\n        const me = players[myId];\n        const isChatInputFocused = localChatInput && document.activeElement === localChatInput;\n        if (!me || me.isDead || isChatInputFocused) return;\n\n        // Hotbar rendering constants (should match hotbar.js)\n        const HOTBAR_SLOT_SIZE = 60;\n        const HOTBAR_SPACING = 5;\n        const HOTBAR_PADDING = 10;\n        const HOTBAR_HEIGHT = HOTBAR_SLOT_SIZE + HOTBAR_PADDING * 2; // Approximate bar height for calculation\n\n        // Get visible slots from hotbar (hotbar.js manages its internal state)\n        // This is a simplified check assuming hotbar will expose a way to get active slots\n        // For now, assuming hotbar.js handles the click itself or exposes what's needed.\n        // The `handleHotbarInput` (keyboard) is the primary interaction for the hotbar.\n        // This click listener for the hotbar is less critical if keyboard selection is primary.\n        // I'm keeping your original structure for this specific block.\n    });\n\n\n    // Global keydown/keyup listeners for chat and general game input\n    document.addEventListener(\"keydown\", (e) => {\n        const currentTime = Date.now();\n        const isChatInputFocused = localChatInput && document.activeElement === localChatInput;\n        const me = players[myId];\n\n        // Prevent game/chat interactions if the player is dead\n        if (me && me.isDead) {\n            if (e.key.toLowerCase() === 'enter') {\n                e.preventDefault();\n                console.log(\"Player is dead. Cannot open chat or send messages.\");\n                toggleChatInputVisibility(false);\n                if (localChatInput) localChatInput.value = '';\n            }\n            for (const key in keys) {\n                keys[key] = false; // Clear movement keys when dead\n            }\n            return;\n        }\n\n        // Handle 'Enter' key presses for chat\n        if (e.key.toLowerCase() === 'enter') {\n            e.preventDefault(); // Prevent default Enter key behavior (e.g., newline)\n\n            // Debouncing logic\n            if (currentTime - lastEnterPressTime < ENTER_DEBOUNCE_DELAY) {\n                return;\n            }\n            lastEnterPressTime = currentTime;\n\n            if (isChatInputFocused) {\n                sendLocalChatMessage(); // Attempt to send the message\n            } else {\n                toggleChatInputVisibility(true); // Open chat\n            }\n        } else if (!isChatInputFocused) {\n            // Handle hotbar input (number keys 1-9) first if chat is not focused\n            const numKey = parseInt(e.key, 10);\n            if (!isNaN(numKey) && numKey >= 1 && numKey <= 9) {\n                handleHotbarInput(e, socket); // Pass socket for potential emit (e.g., equipping an item)\n                e.preventDefault(); // Prevent any default browser action for number keys\n                return; // Stop further processing for this keydown event\n            }\n\n            // Only capture general game movement input if chat is not focused AND it's not a hotbar key\n            if (typeof e.key === 'string') {\n                keys[e.key.toLowerCase()] = true;\n            }\n        }\n    });\n\n    document.addEventListener(\"keyup\", (e) => {\n        const isChatInputFocused = localChatInput && document.activeElement === localChatInput;\n        const isMainMenuVisible = mainMenu.style.display === 'block';\n\n        if (isMainMenuVisible) {\n            return;\n        }\n\n        if (!isChatInputFocused) {\n            if (typeof e.key === 'string') {\n                keys[e.key.toLowerCase()] = false;\n            }\n        }\n    });\n\n    // Add a click listener to the entire document to hide chat when clicking outside\n    document.addEventListener('click', (e) => {\n        if (localChatInput && localChatInput.style.opacity === '1') {\n            const isMainMenuVisible = mainMenu.style.display === 'block';\n            if (e.target !== localChatInput && !isMainMenuVisible) {\n                toggleChatInputVisibility(false);\n            }\n        }\n    });\n\n\n    socket = io();\n\n    const initializePlayerVisuals = (p) => {\n        p.visualX = p.x;\n        p.visualY = p.y;\n        p.visualAngle = p.angle;\n        p.isSwinging = false;\n        p.swingStartTime = 0;\n        p.trail = [];\n        p.lastSwungHand = 'right';\n        p.currentSwingingHand = null;\n        p.lastKnownHealth = MAX_HEALTH;\n        p.lastDamageTime = 0;\n        p.damageWiggleX = 0;\n        p.damageWiggleY = 0;\n        // Chat message properties for rendering bubbles\n        p.lastMessage = '';\n        p.messageDisplayTime = 0;\n        p.deathTime = 0;\n        // NEW: Initialize weapon related properties if they don't exist from server data\n        p.equippedWeapon = p.equippedWeapon || 'hands';\n        p.unlockedWeapons = p.unlockedWeapons || ['hands'];\n    };\n\n    socket.on(\"init\", (data) => {\n        myId = socket.id;\n        players = data.players;\n        for (const id in data.resources) {\n            resources[id] = { ...data.resources[id], xWiggle: 0, yWiggle: 0 };\n        }\n        for (const id in players) {\n            initializePlayerVisuals(players[id]);\n        }\n\n        const me = players[myId];\n        if (me) {\n            cameraX = clamp(me.x - canvas.width / 5, 0, worldWidth - canvas.width);\n            cameraY = clamp(me.y - canvas.height / 5, 0, worldHeight - canvas.height);\n            // NEW: Update weapon selection UI state on initial load for the local player\n            updateWeaponSelectionUI(me.unlockedWeapons, me.equippedWeapon);\n        }\n\n        socket.emit(\"send-name\", { id: myId, name: playerName });\n        initLeaderboard();\n        // hotbar and weapon selection UI are initialized earlier in startGame\n    });\n\n    socket.on(\"player-moved\", (data) => { // NEED AN UPDATE ASAP.\n        const allPlayersData = data.players;\n        const allResourcesData = data.resources;\n        const serverTopKillerId = data.topKillerId; // Get top killer ID from server\n\n        for (const id in allPlayersData) {\n            const serverPlayer = allPlayersData[id];\n            if (players[id]) {\n                const p = players[id];\n\n                // Check if player just died (for local player)\n                if (serverPlayer.isDead && !p.isDead && id === myId) {\n                    console.log(\"You died! Returning to main menu.\");\n                    mainMenu.style.display = 'block'; // Show main menu\n                    if (mainMenuBackground) {\n                        mainMenuBackground.style.display = 'none'; // Hide the static background image\n                    }\n                    if (playerNameInput) {\n                        playerNameInput.blur();\n                    }\n                    // Hide game UI elements\n                    if (resourceCounterContainer) resourceCounterContainer.style.display = 'none';\n                    if (leaderboardContainer) leaderboardContainer.style.display = 'none';\n                    toggleChatInputVisibility(false); // Hide chat input\n                }\n\n                // NEW: Trigger damage text creation if health decreased\n                if (serverPlayer.health < p.lastKnownHealth) {\n                    p.lastDamageTime = Date.now();\n                    p.damageWiggleX = (Math.random() - 0.5) * PLAYER_DAMAGE_WIGGLE_STRENGTH;\n                    p.damageWiggleY = (Math.random() - 0.5) * PLAYER_DAMAGE_WIGGLE_STRENGTH;\n                    \n                    const damageAmount = p.lastKnownHealth - serverPlayer.health;\n                    const isOwnPlayer = (id === myId); // Check if the damaged player is the local player\n                    createDamageText(p.visualX, p.visualY, damageAmount, isOwnPlayer, cameraX, cameraY);\n                }\n\n                // Preserve client-side visual states including chat message state\n                serverPlayer.visualX = p.visualX;\n                serverPlayer.visualY = p.y; // Server is authoritative on Y position, use server Y\n                serverPlayer.visualAngle = p.visualAngle;\n                serverPlayer.isSwinging = p.isSwinging;\n                serverPlayer.swingStartTime = p.swingStartTime;\n                serverPlayer.trail = p.trail;\n                serverPlayer.lastSwungHand = p.lastSwungHand;\n                serverPlayer.currentSwingingHand = p.currentSwingingHand;\n                serverPlayer.lastDamageTime = p.lastDamageTime;\n                serverPlayer.damageWiggleX = p.damageWiggleX;\n                serverPlayer.damageWiggleY = p.damageWiggleY;\n                serverPlayer.lastMessage = p.lastMessage;\n                serverPlayer.messageDisplayTime = p.messageDisplayTime;\n                serverPlayer.deathTime = p.deathTime;\n\n                // IMPORTANT: Ensure equippedWeapon and unlockedWeapons are updated from server\n                serverPlayer.equippedWeapon = serverPlayer.equippedWeapon || 'hands';\n                serverPlayer.unlockedWeapons = serverPlayer.unlockedWeapons || ['hands'];\n\n                Object.assign(p, serverPlayer); // Apply all server updates\n                p.lastKnownHealth = serverPlayer.health;\n\n                // NEW: Update weapon selection UI state for the local player whenever player data changes\n                if (id === myId) {\n                    updateWeaponSelectionUI(p.unlockedWeapons, p.equippedWeapon);\n                }\n                \n            } else {\n                players[id] = serverPlayer;\n                initializePlayerVisuals(players[id]);\n            }\n        }\n        for (const id in players) {\n            if (!allPlayersData[id]) {\n                delete players[id];\n            }\n        }\n\n        for (const id in allResourcesData) {\n            const serverResource = allResourcesData[id];\n            if (resources[id]) {\n                Object.assign(resources[id], serverResource);\n            } else {\n                resources[id] = { ...serverResource, xWiggle: 0, yWiggle: 0 };\n            }\n        }\n        for (const id in resources) {\n            if (!allResourcesData[id]) {\n                delete resources[id];\n            }\n        }\n        // Update leaderboard whenever player data moves, passing topKillerId\n        updateLeaderboard(players, myId, serverTopKillerId);\n    });\n\n    socket.on(\"player-joined\", (player) => {\n        players[player.id] = player;\n        initializePlayerVisuals(player);\n    });\n\n    socket.on('player-has-swung', (id) => {\n        if (players[id]) {\n            const p = players[id];\n            p.isSwinging = true;\n            p.swingStartTime = Date.now();\n\n            if (p.lastSwungHand === 'right') {\n                p.currentSwingingHand = 'left';\n                p.lastSwungHand = 'left';\n            } else {\n                p.currentSwingingHand = 'right';\n                p.lastSwungHand = 'right';\n            }\n        }\n    });\n\n    socket.on(\"player-left\", (id) => {\n        delete players[id];\n        // Update leaderboard when a player leaves\n        updateLeaderboard(players, myId);\n    });\n\n    socket.on('resource-wiggled', (data) => {\n        wiggleGameObject(data.resourceId, data.direction);\n    });\n\n    socket.on('pong', (timestamp) => {\n        currentPing = Date.now() - pingSendTime;\n    });\n\n    // Listen for local chat messages from server\n    socket.on('local-chat-message', (data) => {\n        const player = players[data.senderId];\n        if (player) {\n            player.lastMessage = data.message;\n            player.messageDisplayTime = Date.now();\n        }\n    });\n\n    lastTime = Date.now();\n    loop();\n    console.log(\"Game started! Client-side loop initiated.\");\n\n    setInterval(() => {\n        pingSendTime = Date.now();\n        socket.emit('ping');\n    }, PING_INTERVAL);\n}\n\nfunction resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n}\n\nfunction wiggleGameObject(sid, dir) {\n    const tmpObj = resources[sid];\n    if (tmpObj) {\n        tmpObj.xWiggle += GATHER_WIGGLE * Math.cos(dir);\n        tmpObj.yWiggle += GATHER_WIGGLE * Math.sin(dir);\n    }\n}\n\n// --- Main Game Loop Functions ---\nfunction update() {\n    const me = players[myId];\n    if (!me || me.isDead) return; // If player is dead, stop updating game logic\n\n    const isChatInputFocused = localChatInput && document.activeElement === localChatInput;\n\n    let currentKeys = { ...keys }; // Create a copy of the keys object\n\n    if (isChatInputFocused) {\n        // If chat is focused, clear all movement keys to stop the player\n        for (const key in currentKeys) {\n            if (['w', 'a', 's', 'd'].includes(key)) { // Only clear movement keys\n                currentKeys[key] = false;\n            }\n        }\n    }\n\n    // Always send client-input, but use the potentially modified 'currentKeys'\n    const dx = (mouseX + cameraX) - me.visualX;\n    const dy = (mouseY + cameraY) - me.visualY;\n    const targetAngle = Math.atan2(dy, dx);\n    // NEW: Send player's equipped weapon with client-input (for server to know what's active)\n    socket.emit(\"client-input\", { keys: currentKeys, angle: targetAngle, name: playerName, equippedWeapon: me.equippedWeapon });\n\n    // Only allow swinging if chat input is not focused and player is not dead\n    if (!isChatInputFocused && (isLeftMouseDown || isRightMouseDown) && !me.isDead) {\n        socket.emit('player-swing');\n    }\n\n    // Client-side resource wiggle decay\n    for (const id in resources) {\n        const res = resources[id];\n        if (res.xWiggle) {\n            res.xWiggle *= Math.pow(0.9, deltaTime * 60);\n            if (Math.abs(res.xWiggle) < 0.1) res.xWiggle = 0;\n        }\n        if (res.yWiggle) {\n            res.yWiggle *= Math.pow(0.9, deltaTime * 60);\n            if (Math.abs(res.yWiggle) < 0.1) res.yWiggle = 0;\n        }\n    }\n}\n\nfunction loop() {\n    deltaTime = (Date.now() - lastTime) / 1000;\n    lastTime = Date.now();\n    \n    update();\n    \n    const me = players[myId];\n    // Camera movement and resource counter updates only if player exists and is not dead\n    // This ensures the camera stays put when dead and menu is up.\n    if (me && me.visualX !== undefined && !me.isDead) {\n        const targetCameraX = me.visualX - canvas.width / 2;\n        const targetCameraY = me.y - canvas.height / 2;\n        \n        // Smoothed camera movement\n        cameraX += (targetCameraX - cameraX) * cameraLerpFactor;\n        cameraY += (targetCameraY - cameraY) * cameraLerpFactor;\n\n        cameraX = clamp(cameraX, 0, worldWidth - canvas.width);\n        cameraY = clamp(cameraY, 0, worldHeight - canvas.height);\n\n        if (window.updateHtmlResourceCounter && me.inventory) {\n            window.updateHtmlResourceCounter(me.inventory);\n        }\n    } else if (me && me.isDead) {\n        // If dead, ensure resource counters are hidden (handled in player-moved death logic)\n        // and camera stays fixed at death location.\n    }\n\n    // Drawing (rendering) always happens, regardless of menu state,\n    // so the canvas is always live in the background.\n    // Pass topKillerId to the main draw function as it needs it for the skull icon\n    draw(ctx, canvas, players, myId, resources, cameraX, cameraY, deltaTime, currentPing, CHAT_BUBBLE_DURATION, players[myId] ? players[myId].topKillerId : null); // Assumes topKillerId is on player object for now or global. It's global on server, but client gets it via player-moved.\n\n    // NEW: Update and draw damage texts (should be above game world but below UI)\n    updateDamageTexts(deltaTime);\n    drawDamageTexts(ctx);\n\n    // NEW: Draw Hotbar (appears at the bottom)\n    drawHotbar(ctx, canvas, players[myId] ? players[myId].equippedWeapon : null); // Pass equipped weapon for highlighting\n\n    // NEW: Draw Weapon Selection UI (appears at the top)\n    if (me) { // Only draw if the local player exists\n        // weaponSelectionUI.js internally uses its own updated state (unlockedWeapons, equippedWeapon)\n        drawWeaponSelectionUI(ctx, canvas);\n    }\n    \n    requestAnimationFrame(loop);\n}\n","// --- Imports from main.js (Constants needed for minimap) ---\nimport {\n    worldWidth, worldHeight, playerFillColor, myId, DEAD_PLAYER_HIDE_DELAY // NEW: Import DEAD_PLAYER_HIDE_DELAY\n} from './main.js';\n\n// --- Minimap Specific Constants ---\nexport const MINIMAP_SIZE = 150; // Increased size\nexport const MINIMAP_PADDING = 20; // Consistent padding\nexport const MINIMAP_BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.5)\"; // Background color\n// No minimapBorderColor as the outline is removed\n\n/**\n * Draws the minimap on the canvas.\n * @param {CanvasRenderingContext2D} ctx - The 2D rendering context of the canvas.\n * @param {HTMLCanvasElement} canvas - The main game canvas element.\n * @param {Object} players - The object containing all player data.\n * @param {string} myId - The ID of the current player.\n * @param {number} worldWidth - The width of the game world.\n * @param {number} worldHeight - The height of the game world.\n */\nexport function drawMinimap(ctx, canvas, players, myId, worldWidth, worldHeight) {\n    const minimapX = MINIMAP_PADDING;\n    const minimapY = canvas.height - MINIMAP_SIZE - MINIMAP_PADDING;\n    const now = Date.now(); // Get current time for checking death delay\n\n    // Draw minimap background\n    ctx.fillStyle = MINIMAP_BACKGROUND_COLOR;\n    ctx.fillRect(minimapX, minimapY, MINIMAP_SIZE, MINIMAP_SIZE);\n\n    // Calculate scaling factors for minimap\n    const scaleX = MINIMAP_SIZE / worldWidth;\n    const scaleY = MINIMAP_SIZE / worldHeight;\n\n    // Draw players on the minimap\n    for (const id in players) {\n        const p = players[id];\n\n        // Only draw player if they are not dead, OR if they are dead but still within the hide delay\n        if (!p.isDead || (p.isDead && (now - p.deathTime < DEAD_PLAYER_HIDE_DELAY))) {\n            const playerMinimapX = minimapX + p.visualX * scaleX;\n            const playerMinimapY = minimapY + p.visualY * scaleY;\n            ctx.fillStyle = (id === myId) ? 'white' : playerFillColor;\n            ctx.globalAlpha = p.isDead ? 0.5 : 1.0; // Still show as semi-transparent if dead\n            ctx.beginPath();\n            ctx.arc(playerMinimapX, playerMinimapY, 3, 0, Math.PI * 2); // Player dots\n            ctx.fill();\n            ctx.globalAlpha = 1.0; // Reset alpha\n        }\n    }\n}\n","// --- Imports from utils.js ---\nimport { UTILS, renderCircle, renderStar, renderBlob } from './utils.js';\n\n// --- Imports from main.js (Constants, specifically RESOURCE_TYPES) ---\nimport { RESOURCE_TYPES, RESOURCE_PROPERTIES } from './main.js'; // Explicitly import RESOURCE_TYPES and RESOURCE_PROPERTIES\n\n// Cache for generated game object sprites\nlet gameObjectSprites = {};\n\n// Function to get or create a resource sprite based on Moomoo.io logic\n// Now accepts resourceDrawSize, resourceOutlineColor, resourceOutlineWidth as arguments.\nexport function getResSprite(obj, resourceDrawSize, resourceOutlineColor, resourceOutlineWidth) {\n    // biomeID is always 0 (grass biome) and isNight is false, as per user request to ignore specific biome/day-night logic\n    const biomeID = 0;\n    const isNight = false;\n    \n    // Map our RESOURCE_TYPES to Moomoo.io numerical types for design logic\n    let moomooType;\n    \n    // --- IMPORTANT FIX: Use imported RESOURCE_TYPES constants for matching ---\n    switch (obj.type) {\n        case RESOURCE_TYPES.WOOD: moomooType = 0; break;\n        case RESOURCE_TYPES.FOOD: moomooType = 1; break;\n        case RESOURCE_TYPES.STONE: moomooType = 2; break;\n        // For gold, use an existing design or create a new one.\n        // Assuming moomooType 3 is typically 'gold' or 'rare stone' in similar games,\n        // we'll map it there for consistency with the provided 'moomooType == 2 || moomooType == 3' logic.\n        case RESOURCE_TYPES.GOLD: moomooType = 3; break;\n        default: moomooType = 0; // Fallback\n    }\n\n    // Use the passed-in resourceDrawSize as the 'scale'\n    // NOTE: For resources, RESOURCE_DRAW_SIZE (100) is passed as tmpScale.\n    // Individual resource properties (like collisionRadius) should be used for specific sizing.\n    const tmpScale = resourceDrawSize;\n\n    const tmpIndex = moomooType + '_' + tmpScale + '_' + biomeID;\n    let tmpSprite = gameObjectSprites[tmpIndex];\n\n    if (!tmpSprite) {\n        // --- Debugging logs for sprite creation (NEW) ---\n        console.log(`Creating sprite for type: ${obj.type} (moomooType: ${moomooType})`);\n        console.log(`Passed dimensions: tmpScale=${tmpScale}, outlineWidth=${resourceOutlineWidth}`);\n\n        const tmpCanvas = document.createElement('canvas');\n        // Canvas size needs to be large enough for the largest resource (tree)\n        // Ensure sufficient padding for drawing and outline.\n        tmpCanvas.width = tmpCanvas.height = tmpScale * 3.5 + resourceOutlineWidth * 4; // Very generous buffer\n        \n        // --- Debugging logs for canvas dimensions (NEW) ---\n        console.log(`Canvas dimensions: width=${tmpCanvas.width}, height=${tmpCanvas.height}`);\n\n        const tmpContext = tmpCanvas.getContext('2d');\n        // Translate to the center of the new, larger canvas\n        tmpContext.translate(tmpCanvas.width / 2, tmpCanvas.height / 2);\n        tmpContext.rotate(UTILS.randFloat(0, Math.PI)); // Random rotation for some objects\n        // Set default stroke and linewidth, but these will be overridden for the bush specific colors\n        tmpContext.strokeStyle = resourceOutlineColor;\n        tmpContext.lineWidth = resourceOutlineWidth;\n\n        if (moomooType == 0) { // Wood (Tree) - UNCHANGED\n            const tmpCount = UTILS.randInt(5, 7);\n            tmpContext.globalAlpha = isNight ? 0.6 : 0.8;\n\n            // Foliage\n            const foliageVerticalOffset = 0;\n            for (let i = 0; i < 2; ++i) {\n                const currentScale = tmpScale * (!i ? 1.5 : 1.0);\n                tmpContext.save();\n                tmpContext.translate(0, foliageVerticalOffset);\n                renderStar(tmpContext, tmpCount, currentScale, currentScale * 0.7);\n                tmpContext.fillStyle = !biomeID\n                    ? (!i ? '#4CAF50' : '#3D8E41')\n                    : (!i ? '#e3f1f4' : '#fff');\n                tmpContext.fill();\n                if (!i) {\n                    tmpContext.stroke();\n                    tmpContext.globalAlpha = 1;\n                }\n                tmpContext.restore();\n            }\n        } else if (moomooType == 1) { // Food (Wheat Bush) - TOP-DOWN DESIGN\n            const radius = RESOURCE_PROPERTIES[RESOURCE_TYPES.FOOD].collisionRadius;\n            const stemColor = '#6B8E23';          // Olive green\n            const headColor = '#DAA520';          // Goldenrod\n            const innerHeadColor = '#FFD700';     // Brighter gold for center\n            const outlineColor = resourceOutlineColor;\n\n            const numStalks = 12 + UTILS.randInt(0, 5); // 12–17 wheat stalks\n            const stalkLength = radius * 0.9;\n            const stalkWidth = 2;\n\n            tmpContext.save();\n            tmpContext.rotate(UTILS.randFloat(0, Math.PI * 2)); // Random rotation for natural variation\n\n            for (let i = 0; i < numStalks; i++) {\n                const angle = (Math.PI * 2 / numStalks) * i + UTILS.randFloat(-0.1, 0.1);\n                const dist = radius * UTILS.randFloat(0.3, 0.7); // Offset from center\n                const x = Math.cos(angle) * dist;\n                const y = Math.sin(angle) * dist;\n                const length = stalkLength * UTILS.randFloat(0.6, 1.0);\n\n                tmpContext.save();\n                tmpContext.translate(x, y);\n                tmpContext.rotate(angle);\n\n                // Stem\n                tmpContext.fillStyle = stemColor;\n                tmpContext.fillRect(-stalkWidth / 2, 0, stalkWidth, length * 0.6);\n\n                // Wheat head (golden oval at end of stalk)\n                tmpContext.fillStyle = headColor;\n                tmpContext.strokeStyle = outlineColor;\n                tmpContext.lineWidth = resourceOutlineWidth;\n                tmpContext.beginPath();\n                tmpContext.ellipse(0, length * 0.7, 5, 8, 0, 0, Math.PI * 2);\n                tmpContext.fill();\n                tmpContext.stroke();\n\n                // Inner highlight\n                tmpContext.fillStyle = innerHeadColor;\n                tmpContext.beginPath();\n                tmpContext.ellipse(0, length * 0.7, 2, 4, 0, 0, Math.PI * 2);\n                tmpContext.fill();\n\n                tmpContext.restore();\n            }\n\n            tmpContext.restore();\n    } else if (moomooType == 2) { // Stone - UNCHANGED (moomooType 2)\n            tmpContext.fillStyle = (biomeID == 2 ? '#938d77' : '#939393'); // Original stone color\n            renderStar(tmpContext, 3, tmpScale, tmpScale);\n            tmpContext.fill();\n            tmpContext.stroke();\n            tmpContext.fillStyle = (biomeID == 2 ? '#b2ab90' : '#bcbcbc'); // Lighter stone accent\n            renderStar(tmpContext, 3, tmpScale * 0.55, tmpScale * 0.65);\n            tmpContext.fill();\n        } else if (moomooType == 3) { // Gold - NEW (moomooType 3)\n            // Gold nugget / jagged rock appearance\n            //tmpContext.fillStyle = '#FFD700'; // Gold color\n            //tmpContext.strokeStyle = '#B8860B'; // Darker gold outline\n            //tmpContext.lineWidth = resourceOutlineWidth;\n\n\n            //tmpContext.fillStyle = '#DAA520'; // A slightly darker gold for inner details\n\n\n            //tmpContext.fillStyle = '#FFF8DC'; // A very light gold for highlights\n\n          \n           tmpContext.fillStyle = '#FFD700'; // Original stone color\n            renderStar(tmpContext, 3, tmpScale, tmpScale);\n            tmpContext.fill();\n            tmpContext.stroke();\n            tmpContext.fillStyle = '#FFF8DC'; // Lighter stone accent\n            renderStar(tmpContext, 3, tmpScale * 0.55, tmpScale * 0.65);\n            tmpContext.fill();\n        }\n        tmpSprite = tmpCanvas;\n        gameObjectSprites[tmpIndex] = tmpSprite;\n    }\n    return tmpSprite;\n}\n","// --- Helper Functions (General Utilities) ---\n\nexport function interpolateColor(color1, color2, factor) {\n    const hexToRgb = hex => {\n        let r = 0, g = 0, b = 0;\n        if (hex.length === 4) {\n            r = parseInt(hex[1] + hex[1], 16);\n            g = parseInt(hex[2] + hex[2], 16);\n            b = parseInt(hex[3] + hex[3], 16);\n        } else if (hex.length === 7) {\n            r = parseInt(hex.substring(1, 3), 16);\n            g = parseInt(hex.substring(3, 5), 16);\n            b = parseInt(hex.substring(5, 7), 16);\n        }\n        return { r, g, b };\n    };\n\n    const rgbToHex = (r, g, b) => {\n        const toHex = c => Math.min(255, Math.max(0, Math.round(c))).toString(16).padStart(2, '0');\n        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n    };\n\n    const c1 = hexToRgb(color1);\n    const c2 = hexToRgb(color2);\n    const r = c1.r + factor * (c2.r - c1.r);\n    const g = c1.g + factor * (c2.g - c1.g);\n    const b = c1.b + factor * (c2.b - c1.b);\n    return rgbToHex(r, g, b);\n}\n\nexport function lerpAngle(start, end, amount) {\n    let shortest_angle = ((((end - start) % (2 * Math.PI)) + (3 * Math.PI)) % (2 * Math.PI)) - Math.PI;\n    return start + shortest_angle * amount;\n}\n\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n\n// Moomoo.io specific UTILS (simplified for this context)\nexport const UTILS = {\n    randInt: (min, max) => Math.floor(Math.random() * (max - min + 1)) + min,\n    randFloat: (min, max) => Math.random() * (max - min) + min\n};\n\n// --- Custom Drawing Helpers (from user's snippet) ---\n\n// Adjusted renderCircle to match user's provided signature with dontStroke/dontFill\nexport function renderCircle(x, y, scale, ctxt, dontStroke, dontFill) {\n    ctxt.beginPath();\n    ctxt.arc(x, y, scale, 0, 2 * Math.PI);\n    if (!dontFill) ctxt.fill();\n    if (!dontStroke) ctxt.stroke();\n}\n\n// New renderLeaf function from user's snippet\nexport function renderLeaf(x, y, l, r, ctxt) {\n    let endX = x + l * Math.cos(r);\n    let endY = y + l * Math.sin(r);\n    let width = l * 0.4;\n    ctxt.moveTo(x, y); // This seems redundant with beginPath right after, typically moveTo is inside beginPath.\n                      // Retaining user's original structure.\n    ctxt.beginPath();\n    ctxt.quadraticCurveTo((x + endX) / 2 + width * Math.cos(r + Math.PI / 2), (y + endY) / 2 + width * Math.sin(r + Math.PI / 2), endX, endY);\n    ctxt.quadraticCurveTo((x + endX) / 2 - width * Math.cos(r + Math.PI / 2), (y + endY) / 2 - width * Math.sin(r + Math.PI / 2), x, y);\n    ctxt.closePath();\n    ctxt.fill();\n    ctxt.stroke();\n}\n\n\n// Moomoo.io specific drawing helpers (original from previous versions, kept for other sprite generation)\nexport function renderStar(context, sides, outerRadius, innerRadius) {\n    context.beginPath();\n    for (let i = 0; i < sides * 2; i++) {\n        const radius = i % 2 === 0 ? outerRadius : innerRadius;\n        const angle = (Math.PI / sides) * i;\n        const x = radius * Math.cos(angle);\n        const y = radius * Math.sin(angle);\n        if (i === 0) {\n            context.moveTo(x, y);\n        } else {\n            context.lineTo(x, y);\n        }\n    }\n    context.closePath();\n}\n\n// A more accurate renderBlob based on typical irregular polygon drawing (Moomoo.io style)\nexport function renderBlob(context, irregularity, outerRadius, innerRadius) {\n    context.beginPath();\n    const angleStep = (Math.PI * 2) / irregularity;\n    let currentAngle = UTILS.randFloat(0, Math.PI * 2);\n\n    let points = [];\n    for (let i = 0; i < irregularity; i++) {\n        const r = UTILS.randFloat(innerRadius, outerRadius);\n        const x = r * Math.cos(currentAngle);\n        const y = r * Math.sin(currentAngle);\n        points.push({ x, y });\n        currentAngle += angleStep;\n    }\n\n    context.moveTo(points[0].x, points[0].y);\n    for (let i = 0; i < points.length; i++) {\n        const p1 = points[i];\n        const p2 = points[(i + 1) % points.length];\n        const xc = (p1.x + p2.x) / 2;\n        const yc = (p1.y + p2.y) / 2;\n        context.quadraticCurveTo(p1.x, p1.y, xc, yc);\n    }\n    context.closePath();\n}\n","// weaponSelectionUI.js - Manages the UI and logic for selecting unlocked weapons.\n\n// Add a polyfill for roundRect if it's not natively supported by the browser's CanvasRenderingContext2D.\n// This ensures that the roundRect method used for drawing rounded rectangles works consistently.\nif (!CanvasRenderingContext2D.prototype.roundRect) {\n    CanvasRenderingContext2D.prototype.roundRect = function (x, y, width, height, radius) {\n        // Normalize the radius input to an object with properties for each corner.\n        if (typeof radius === 'number') {\n            radius = { tl: radius, tr: radius, br: radius, bl: radius };\n        } else if (typeof radius === 'object') {\n            radius = {\n                tl: radius.tl || 0, // Top-left radius, default to 0\n                tr: radius.tr || 0, // Top-right radius, default to 0\n                br: radius.br || 0, // Bottom-right radius, default to 0\n                bl: radius.bl || 0  // Bottom-left radius, default to 0\n            };\n        } else {\n            // Default to no radius if input is invalid.\n            radius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        }\n\n        // Begin a new path for drawing the rounded rectangle.\n        this.beginPath();\n        // Move to the starting point (top-left corner after the top-left radius).\n        this.moveTo(x + radius.tl, y);\n        // Draw the top line.\n        this.lineTo(x + width - radius.tr, y);\n        // Draw the top-right corner arc.\n        this.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n        // Draw the right line.\n        this.lineTo(x + width, y + height - radius.br);\n        // Draw the bottom-right corner arc.\n        this.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n        // Draw the bottom line.\n        this.lineTo(x + radius.bl, y + height);\n        // Draw the bottom-left corner arc.\n        this.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n        // Draw the left line.\n        this.lineTo(x, y + radius.tl);\n        // Draw the top-left corner arc and close the path.\n        this.quadraticCurveTo(x, y, x + radius.tl, y);\n        this.closePath();\n        return this; // Return the context for chaining\n    };\n}\n\n\n// Import necessary constants from main.js (for drawing)\n// You might need to adjust imports if weapon names become images or more complex\nimport {\n    playerFillColor, playerOutlineColor, playerOutlineWidth // For weapon box styling consistency (though not directly used in this UI file)\n} from './main.js';\n\n// Import weapon properties to get weapon details (currently not used in this UI, but good for future expansion)\nconst { getWeaponProperties } = require('./weapons.js');\n\n// --- UI Constants ---\nconst SLOT_SIZE = 60; // Size of each weapon slot (width and height)\nconst SLOT_SPACING = 10; // Space between slots\nconst PADDING_X = 20; // Padding from left/right edges of the canvas\nconst PADDING_Y = 10; // Padding from top edge of the canvas\n\nconst BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.7)\"; // Dark semi-transparent background for the bar\nconst BORDER_COLOR = \"#AAA\"; // Light gray border\nconst ACTIVE_BORDER_COLOR = \"#FFFF00\"; // Bright yellow for active slot\nconst INACTIVE_SLOT_COLOR = \"rgba(50,50,50,0.5)\"; // Color for empty or non-active slots\n\nconst TEXT_COLOR = \"white\"; // Color for weapon names/labels\nconst FONT_SIZE = 14; // Font size for weapon name\nconst KEY_LABEL_FONT_SIZE = 12; // Font size for the number key label\n\n// --- Internal State ---\nlet unlockedWeapons = []; // Stores the names of weapons the player has unlocked\nlet equippedWeaponName = 'hands'; // The name of the weapon currently equipped, defaults to 'hands'\n\n// This will store Image objects for weapon icons if you add them later\nconst weaponIcons = {};\n// Example: Preload icons (you'll need actual image paths)\n// Object.keys(weaponData).forEach(weaponName => {\n//     const img = new Image();\n//     img.src = `assets/weapons/${weaponName.replace(/ /g, '_')}.png`; // Example path convention\n//     img.onload = () => weaponIcons[weaponName] = img;\n//     img.onerror = () => console.warn(`Failed to load weapon icon: ${img.src}`);\n// });\n\n\n/**\n * Initializes the weapon selection UI.\n * This function is primarily for conceptual setup as drawing is done on canvas.\n * In a more complex setup, this might set up event listeners or initial state.\n */\nexport function initWeaponSelectionUI() {\n    console.log(\"Weapon selection UI initialized.\");\n    // Ensure 'hands' is always the first unlocked weapon by default\n    // This is a good place to initialize `unlockedWeapons` if it's not done elsewhere.\n    // However, `updateWeaponSelectionUI` will typically manage this based on game state.\n}\n\n/**\n * Updates the data displayed by the weapon selection UI.\n * This function should be called by your game logic whenever the player's\n * unlocked weapons or equipped weapon changes (e.g., after aging up, picking up a new weapon).\n * @param {string[]} newUnlockedWeapons - Array of weapon names the player has unlocked.\n * @param {string} newEquippedWeaponName - The name of the weapon currently equipped.\n */\nexport function updateWeaponSelectionUI(newUnlockedWeapons, newEquippedWeaponName) {\n    unlockedWeapons = newUnlockedWeapons;\n    equippedWeaponName = newEquippedWeaponName;\n    console.log(\"Weapon selection UI updated. Unlocked:\", unlockedWeapons, \"Equipped:\", equippedWeaponName);\n}\n\n/**\n * Draws the weapon selection bar on the canvas.\n * This function should be called in your main game loop every frame.\n * The UI will only be drawn if the player has more than just 'hands' unlocked.\n * @param {CanvasRenderingContext2D} ctx - The 2D rendering context of the canvas.\n * @param {HTMLCanvasElement} canvas - The canvas element itself.\n */\nexport function drawWeaponSelectionUI(ctx, canvas) {\n    // Only show the UI if there's more than one weapon unlocked (i.e., more than just 'hands')\n    if (unlockedWeapons.length <= 1) {\n        return;\n    }\n\n    // Calculate the total width of the weapon bar based on the number of unlocked weapons.\n    const totalWidth = unlockedWeapons.length * SLOT_SIZE + (unlockedWeapons.length - 1) * SLOT_SPACING;\n    // Center the weapon bar horizontally on the canvas.\n    const startX = (canvas.width / 2) - (totalWidth / 2);\n    // Position the weapon bar from the top edge of the canvas.\n    const startY = PADDING_Y;\n\n    // Draw background for the entire bar\n    ctx.fillStyle = BACKGROUND_COLOR;\n    ctx.beginPath(); // Start a new path for the background\n    ctx.roundRect(startX - PADDING_X / 2, startY - PADDING_Y / 2, totalWidth + PADDING_X, SLOT_SIZE + PADDING_Y, 10);\n    ctx.fill();\n\n    // Iterate over each unlocked weapon to draw its slot.\n    unlockedWeapons.forEach((weaponName, index) => {\n        const slotX = startX + index * (SLOT_SIZE + SLOT_SPACING);\n        const slotY = startY;\n\n        ctx.save(); // Save the current canvas state (e.g., fillStyle, strokeStyle, font)\n\n        // Draw slot background\n        ctx.fillStyle = INACTIVE_SLOT_COLOR;\n        ctx.beginPath(); // Start a new path for the slot\n        ctx.roundRect(slotX, slotY, SLOT_SIZE, SLOT_SIZE, 5);\n        ctx.fill();\n\n        // Draw slot border (active or inactive)\n        if (weaponName === equippedWeaponName) {\n            ctx.strokeStyle = ACTIVE_BORDER_COLOR;\n            ctx.lineWidth = 3; // Thicker border for the currently equipped weapon\n        } else {\n            ctx.strokeStyle = BORDER_COLOR;\n            ctx.lineWidth = 2;\n        }\n        ctx.stroke(); // Apply the stroke to the slot path\n\n        // Draw weapon icon/text\n        ctx.fillStyle = TEXT_COLOR;\n        ctx.font = `${FONT_SIZE}px Arial`;\n        ctx.textAlign = \"center\"; // Center the text horizontally\n        ctx.textBaseline = \"middle\"; // Center the text vertically\n\n        // Use the first word of the weapon name for display (e.g., \"Assault Rifle\" becomes \"Assault\")\n        const weaponDisplayName = weaponName.split(' ')[0];\n        ctx.fillText(weaponDisplayName, slotX + SLOT_SIZE / 2, slotY + SLOT_SIZE / 2);\n\n        // Draw key label (1, 2, 3...) in the top-left corner of the slot\n        ctx.fillStyle = TEXT_COLOR;\n        ctx.font = `bold ${KEY_LABEL_FONT_SIZE}px Arial`;\n        ctx.textAlign = \"left\"; // Align key label to the left\n        ctx.textBaseline = \"top\"; // Align key label to the top\n        ctx.fillText(String(index + 1), slotX + 5, slotY + 5); // Position key in top-left corner with padding\n\n        ctx.restore(); // Restore the canvas state to what it was before drawing this slot\n    });\n}\n\n/**\n * Handles clicks on the canvas to select a weapon from the hotbar.\n * This function should be attached as an event listener to your canvas for 'click' events.\n * It checks if the click occurred within any weapon slot and emits an 'equip-weapon' event if so.\n * @param {MouseEvent} event - The mouse click event object.\n * @param {object} player - The local player object (to check if player is dead or valid).\n * @param {SocketIO.Socket} socket - The Socket.IO client instance for sending equip events.\n * @returns {boolean} True if a weapon slot was clicked and handled, false otherwise.\n */\nexport function handleWeaponSelectionClick(event, player, socket) {\n    // Don't process clicks if the player is dead or if there's only one weapon (no UI shown).\n    if (!player || player.isDead || unlockedWeapons.length <= 1) {\n        return false;\n    }\n\n    const canvas = event.target;\n    // Get the size and position of the canvas relative to the viewport.\n    const rect = canvas.getBoundingClientRect();\n    // Calculate mouse coordinates relative to the canvas.\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n\n    // Recalculate bar position to match drawing logic.\n    const totalWidth = unlockedWeapons.length * SLOT_SIZE + (unlockedWeapons.length - 1) * SLOT_SPACING;\n    const startX = (canvas.width / 2) - (totalWidth / 2);\n    const startY = PADDING_Y;\n\n    // Loop through each weapon slot to check for a click.\n    for (let i = 0; i < unlockedWeapons.length; i++) {\n        const slotX = startX + i * (SLOT_SIZE + SLOT_SPACING);\n        const slotY = startY;\n\n        // Check if the mouse click is within the bounds of the current slot.\n        if (mouseX >= slotX && mouseX <= slotX + SLOT_SIZE &&\n            mouseY >= slotY && mouseY <= slotY + SLOT_SIZE) {\n\n            const selectedWeapon = unlockedWeapons[i];\n            // Only attempt to equip the weapon if it's not already the equipped one.\n            if (selectedWeapon !== equippedWeaponName) {\n                console.log(`Attempting to equip: ${selectedWeapon}`);\n                // Emit a Socket.IO event to the server to equip the selected weapon.\n                socket.emit('equip-weapon', { weaponName: selectedWeapon });\n            }\n            return true; // A weapon slot was clicked, so the event is handled.\n        }\n    }\n    return false; // No weapon slot was clicked.\n}\n","// weapons.js - Defines all weapon properties for the game.\n// This file centralizes weapon data for easy management and balancing.\n\nconst WEAPON_DATA = new Map([\n    // Default Weapon (Age 0) - Matches existing server.js FIST_DAMAGE and FIST_KNOCKBACK_STRENGTH\n    // This is the baseline for all other weapons.\n    [\"hands\", {\n        type: \"default\",\n        speed: 1.0,         // Attack speed multiplier (1.0 is base, higher is faster)\n        dmg: 10,            // Damage dealt per hit\n        knockback: 40,      // Knockback strength per hit (distance pushed)\n        reach: 70,          // How far the attack reaches from player center\n        upgrade: null       // No direct upgrade path from hands\n    }],\n\n    // Primary Weapons (Age 1 - unlocked early)\n    // Generally solid combat options, offering various trade-offs.\n    [\"bat\", {\n        type: \"primary\",\n        speed: 0.9,         // Slightly slower than hands\n        dmg: 15,            // Noticeably more damage than hands\n        knockback: 50,      // Better knockback\n        reach: 80,          // Slightly longer reach\n        upgrade: null\n    }],\n    [\"axe\", {\n        type: \"primary\",\n        speed: 0.8,         // Slower, heavy hits\n        dmg: 18,            // High damage\n        knockback: 60,      // Strong knockback\n        reach: 85,          // Good reach\n        upgrade: \"battle axe\"\n    }],\n    [\"spear\", {\n        type: \"primary\",\n        speed: 1.0,         // Same speed as hands\n        dmg: 14,            // Good damage\n        knockback: 45,      // Moderate knockback\n        reach: 120,         // SIGNIFICANTLY longer reach\n        upgrade: [\"trident\", \"javelin\"]\n    }],\n    [\"dagger\", {\n        type: \"primary\",\n        speed: 1.5,         // Very fast\n        dmg: 8,             // Low damage, but high DPS due to speed\n        knockback: 10,      // Minimal knockback\n        reach: 60,          // Shorter reach\n        upgrade: \"dual daggers\"\n    }],\n    [\"short sword\", {\n        type: \"primary\",\n        speed: 1.1,         // Slightly faster than hands\n        dmg: 12,            // Decent damage\n        knockback: 30,      // Moderate knockback\n        reach: 75,          // Slightly longer reach\n        upgrade: \"long sword\"\n    }],\n\n    // Primary Upgrades (Age 7–9 - late game unlocks)\n    // Significant power increases from their base versions.\n    [\"battle axe\", {\n        type: \"primary\",\n        speed: 0.7,         // Even slower, but massive impact\n        dmg: 25,            // Very high damage\n        knockback: 80,      // Very strong knockback\n        reach: 95,          // Longer reach\n        upgrade: null\n    }],\n    [\"trident\", {\n        type: \"primary\",\n        speed: 1.0,         // Balanced speed\n        dmg: 16,            // Good damage\n        knockback: 50,      // Good knockback\n        reach: 130,         // Even longer reach\n        multiHit: true,     // Custom property: can hit multiple targets\n        upgrade: null\n    }],\n    [\"javelin\", {\n        type: \"primary\",\n        speed: 1.0,         // Balanced speed\n        dmg: 15,            // Good damage\n        knockback: 20,      // Lower knockback due to being throwable\n        reach: 100,         // Good reach\n        throwable: true,    // Custom property: can be thrown\n        upgrade: null\n    }],\n    [\"dual daggers\", {\n        type: \"primary\",\n        speed: 1.8,         // Extremely fast\n        dmg: 9,             // Low damage per hit, but very high DPS\n        knockback: 10,      // Minimal knockback\n        reach: 65,          // Shorter reach\n        combo: true,        // Custom property: allows for combo attacks\n        upgrade: null\n    }],\n    [\"long sword\", {\n        type: \"primary\",\n        speed: 1.0,         // Balanced speed\n        dmg: 18,            // High damage\n        knockback: 45,      // Good knockback\n        reach: 90,          // Longer reach\n        upgrade: null\n    }],\n\n    // Secondary Weapons (Age 4 - mid-game unlocks)\n    // Often offer utility alongside damage, or specialize in a specific combat style.\n    [\"shield\", {\n        type: \"secondary\",\n        speed: 0.5,         // Very slow attack, but primary use is blocking\n        dmg: 5,             // Very low damage\n        knockback: 70,      // High knockback (pushes enemies back to create space)\n        reach: 50,          // Very short attack reach\n        block: true,        // Custom property: can block attacks\n        upgrade: \"spiked shield\"\n    }],\n    [\"throwing knife\", {\n        type: \"secondary\",\n        speed: 1.6,         // Very fast\n        dmg: 7,             // Low damage\n        knockback: 5,       // Very minimal knockback\n        reach: 80,          // Good reach for a thrown projectile (initial contact)\n        throwable: true,    // Custom property: can be thrown\n        upgrade: \"crossknife\"\n    }],\n    [\"hammer\", {\n        type: \"secondary\",\n        speed: 0.6,         // Very slow, heavy\n        dmg: 22,            // Very high damage\n        knockback: 80,      // Extreme knockback\n        reach: 80,          // Good reach\n        upgrade: \"war hammer\"\n    }],\n    [\"gloves\", {\n        type: \"secondary\",\n        speed: 1.7,         // Very fast\n        dmg: 6,             // Low damage, quick hits\n        knockback: 15,      // Minimal knockback\n        reach: 60,          // Shorter reach\n        combo: true,        // Custom property: allows for combo attacks\n        upgrade: \"brass knuckles\"\n    }],\n    [\"boomerang\", {\n        type: \"secondary\",\n        speed: 1.0,         // Balanced speed\n        dmg: 10,            // Moderate damage\n        knockback: 25,      // Moderate knockback\n        reach: 100,         // Good reach for a thrown projectile\n        throwable: true,\n        return: true,       // Custom property: boomerang returns\n        upgrade: null\n    }],\n\n    // Secondary Upgrades (Age 7–9 - late game unlocks)\n    // Enhanced versions of secondary weapons, improving on their core strengths.\n    [\"spiked shield\", {\n        type: \"secondary\",\n        speed: 0.5,         // Same slow speed\n        dmg: 8,             // Slightly more damage\n        knockback: 75,      // Slightly improved knockback\n        reach: 55,          // Slightly longer attack reach\n        block: true,\n        counterDamage: true, // Custom property: deals damage when blocking\n        upgrade: null\n    }],\n    [\"crossknife\", {\n        type: \"secondary\",\n        speed: 1.6,         // Same fast speed\n        dmg: 7,             // Same damage per knife\n        knockback: 5,       // Same minimal knockback\n        reach: 85,          // Good reach\n        throwable: true,\n        dualThrow: true,    // Custom property: can throw two knives\n        upgrade: null\n    }],\n    [\"war hammer\", {\n        type: \"secondary\",\n        speed: 0.5,         // Even slower, but ultimate impact\n        dmg: 30,            // Extremely high damage\n        knockback: 100,     // Max knockback\n        reach: 90,          // Longer reach\n        upgrade: null\n    }],\n    // Adjusted based on your request: \"like hands but stronger and faster slightly and same knockback\"\n    [\"brass knuckles\", {\n        type: \"secondary\",\n        speed: 1.2,         // Faster than hands (1.0)\n        dmg: 12,            // Stronger than hands (10)\n        knockback: 40,      // Same knockback as hands\n        reach: 60,          // Shorter reach\n        combo: true,\n        armorBreak: true,   // Custom property: can reduce enemy armor\n        upgrade: null\n    }]\n]);\n\n// Assign IDs and names for convenience (though Map keys are already names)\nlet idCounter = 0;\nWEAPON_DATA.forEach((weapon, name) => {\n    weapon.id = idCounter++;\n    weapon.name = name;\n});\n\n\n/**\n * Retrieves the properties of a specific weapon by its name.\n * We'll primarily use name as the key for simplicity on the server.\n * @param {string} weaponName - The name of the weapon (e.g., \"axe\").\n * @returns {object|null} The weapon object or null if not found.\n */\nfunction getWeaponProperties(weaponName) {\n    return WEAPON_DATA.get(weaponName) || null;\n}\n\nconst WEAPON_NAMES = Array.from(WEAPON_DATA.keys());\n\nmodule.exports = {\n  WEAPON_DATA,\n  getWeaponProperties,\n  WEAPON_NAMES: Array.from(WEAPON_DATA.keys())\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./public/client/main.js\");\n",""],"names":["DAMAGE_TEXT_RISE_SPEED","DAMAGE_TEXT_FADE_DURATION","DAMAGE_TEXT_FONT_SIZE","DAMAGE_TEXT_FONT_FAMILY","DAMAGE_TEXT_OUTLINE_WIDTH","OWN_PLAYER_DAMAGE_COLOR","OPPONENT_DAMAGE_COLOR","activeDamageTexts","createDamageText","x","y","damageAmount","isOwnPlayer","cameraX","cameraY","displayX","displayY","push","value","Math","floor","color","initialDisplayX","initialDisplayY","currentDisplayY","startTime","Date","now","alpha","updateDamageTexts","deltaTime","filter","text","elapsedTime","drawDamageTexts","ctx","save","forEach","globalAlpha","font","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","fillStyle","fillText","restore","worldWidth","worldHeight","MAX_HEALTH","PLAYER_SMOOTHING_FACTOR","TRAIL_LENGTH","TRAIL_MAX_ALPHA","playerBodyRadiusX","playerBodyRadiusY","handRadius","handSideOffset","handForwardOffset","SWING_DURATION","SWING_REACH","SWING_INWARD_AMOUNT","healthBarWidth","healthBarHeight","healthBarVerticalOffsetFromPlayerBottom","healthBarBorderRadius","fullHealthColor","lowHealthColor","healthBarBackgroundColor","healthBarOutlineColor","healthBarOutlineWidth","backgroundColor","worldBorderColor","gridColor","playerFillColor","playerOutlineColor","playerOutlineWidth","gridSize","RESOURCE_TYPES","PING_FONT_SIZE","PING_TEXT_COLOR","PING_BACKGROUND_COLOR","PING_BORDER_RADIUS","PING_PADDING_X","PING_PADDING_Y","PLAYER_DAMAGE_WIGGLE_STRENGTH","PLAYER_DAMAGE_WIGGLE_DECAY_RATE","HIT_FLASH_DURATION","HIT_FLASH_COLOR","HIT_FLASH_OPACITY","RESOURCE_DRAW_SIZE","RESOURCE_OUTLINE_COLOR","RESOURCE_OUTLINE_WIDTH","CHAT_BUBBLE_OFFSET_Y","CHAT_BUBBLE_FONT_SIZE","CHAT_BUBBLE_TEXT_COLOR","CHAT_BUBBLE_BACKGROUND_COLOR","CHAT_BUBBLE_PADDING_X","CHAT_BUBBLE_PADDING_Y","CHAT_BUBBLE_BORDER_RADIUS","DEAD_PLAYER_HIDE_DELAY","interpolateColor","lerpAngle","getResSprite","drawMinimap","skullImage","Image","src","onerror","console","error","XP_BAR_WIDTH","XP_BAR_HEIGHT","XP_BAR_BORDER_RADIUS","XP_BAR_BACKGROUND_COLOR","XP_BAR_FILL_COLOR","XP_BAR_OUTLINE_COLOR","XP_BAR_OUTLINE_WIDTH","AGE_FONT_SIZE","AGE_TEXT_COLOR","AGE_TEXT_OUTLINE_COLOR","AGE_TEXT_OUTLINE_WIDTH","draw","canvas","players","myId","resources","currentPing","chatBubbleDuration","topKillerId","fillRect","width","height","me","visualX","undefined","interpFactor","exp","id","p","isDead","trail","length","shift","visualY","visualAngle","angle","isSwinging","swingStartTime","currentSwingingHand","damageWiggleX","damageWiggleY","decayFactor","pow","abs","lastMessage","messageDisplayTime","translate","drawGrid","deathTime","drawPlayer","drawResource","drawPlayerOverlay","drawPingCounter","drawAgeingUI","trailPoint","index","beginPath","ellipse","PI","fill","timeSinceDamage","lastDamageTime","currentColor","currentOutlineColor","currentAlpha","rotate","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","handForwardOffsetRight","handForwardOffsetLeft","handSideOffsetRight","handSideOffsetLeft","swingProgress","punchProgress","sin","arc","stroke","health","healthBarX","healthBarY","healthPercentage","max","roundRect","name","inventory","kills","complete","naturalWidth","skullWidth","skullHeight","nameMetrics","measureText","skullDrawX","skullDrawY","drawImage","drawChatMessageBubble","timeElapsed","bubbleAlpha","fadeStartTime","min","textMetrics","textWidth","textHeight","bubbleWidth","bubbleHeight","bubbleX","bubbleY","resource","resourceDrawSize","resourceOutlineColor","resourceOutlineWidth","xWiggle","yWiggle","resourceSprite","startX","endX","startY","endY","moveTo","lineTo","pingText","paddingX","paddingY","panelWidth","panelHeight","panelX","panelY","player","xpBarX","xpBarY","clip","xpPercentage","xpToNextAge","xp","ageText","age","ageTextX","ageTextY","NUM_SLOTS","hotbar","Array","activeSlotIndex","HOTBAR_SLOT_SIZE","HOTBAR_PADDING","HOTBAR_SPACING","HOTBAR_BACKGROUND_COLOR","HOTBAR_BORDER_COLOR","HOTBAR_ACTIVE_BORDER_COLOR","HOTBAR_BORDER_WIDTH","HOTBAR_ACTIVE_BORDER_WIDTH","HOTBAR_KEY_FONT_SIZE","HOTBAR_KEY_COLOR","HOTBAR_ITEM_TEXT_COLOR","HOTBAR_ITEM_FONT_SIZE","PLACEHOLDER_ICONS","fontLink","document","createElement","href","rel","head","appendChild","applyFont","style","textContent","initHotbar","addItemToHotbar","type","iconSrc","quantity","log","drawHotbar","visibleSlots","map","item","i","numVisible","totalWidth","visibleIndex","slotX","slotY","isCurrentActive","handleHotbarInput","e","activeElement","tagName","key","numKey","parseInt","setActiveSlotIndex","preventDefault","existingItem","emptyIndex","indexOf","getActiveItem","removeActiveItem","quantityToRemove","warn","CanvasRenderingContext2D","prototype","radius","tl","tr","br","bl","Object","assign","quadraticCurveTo","closePath","leaderboardContainer","leaderboardList","initLeaderboard","getElementById","updateLeaderboard","sortedPlayers","values","sort","a","b","gold","innerHTML","listItem","rankSpan","classList","add","nameSpan","fontWeight","goldSpan","socket","playerName","getContext","mainMenu","playerNameInput","startGameButton","mainMenuBackground","localChatInput","resourceCounterContainer","cameraLerpFactor","minimapSize","minimapPadding","minimapBackgroundColor","minimapBorderColor","WOOD","STONE","FOOD","GOLD","RESOURCE_PROPERTIES","collectionAmount","xpReward","collisionRadius","hitRadius","GATHER_WIGGLE","COUNTER_PADDING","COUNTER_LINE_HEIGHT","COUNTER_FONT_SIZE","COUNTER_TEXT_COLOR","COUNTER_BACKGROUND_COLOR","COUNTER_BORDER_RADIUS","COUNTER_ICON_SIZE","PING_INTERVAL","CHAT_BUBBLE_DURATION","mouseX","mouseY","keys","isLeftMouseDown","isRightMouseDown","lastTime","pingSendTime","clamp","initWeaponSelectionUI","updateWeaponSelectionUI","drawWeaponSelectionUI","handleWeaponSelectionClick","addEventListener","rect","getBoundingClientRect","clientX","left","clientY","top","isChatInputFocused","clickHandledByWeaponUI","stopPropagation","button","emit","startGame","lastEnterPressTime","ENTER_DEBOUNCE_DELAY","toggleChatInputVisibility","show","opacity","pointerEvents","focus","blur","sendLocalChatMessage","message","trim","display","resizeCanvas","window","setAttribute","HOTBAR_HEIGHT","currentTime","toLowerCase","isNaN","isMainMenuVisible","target","io","initializePlayerVisuals","lastSwungHand","lastKnownHealth","equippedWeapon","unlockedWeapons","on","data","allPlayersData","allResourcesData","serverTopKillerId","serverPlayer","random","serverResource","wiggleGameObject","resourceId","direction","timestamp","senderId","loop","setInterval","innerWidth","innerHeight","sid","dir","tmpObj","cos","update","currentKeys","includes","dx","dy","targetAngle","atan2","res","targetCameraX","targetCameraY","updateHtmlResourceCounter","requestAnimationFrame","MINIMAP_SIZE","MINIMAP_PADDING","MINIMAP_BACKGROUND_COLOR","minimapX","minimapY","scaleX","scaleY","playerMinimapX","playerMinimapY","UTILS","renderCircle","renderStar","renderBlob","gameObjectSprites","obj","biomeID","isNight","moomooType","tmpScale","tmpIndex","tmpSprite","tmpCanvas","tmpContext","randFloat","tmpCount","randInt","foliageVerticalOffset","currentScale","stemColor","headColor","innerHeadColor","outlineColor","numStalks","stalkLength","stalkWidth","dist","color1","color2","factor","hexToRgb","hex","r","g","substring","rgbToHex","toHex","c","round","toString","padStart","c1","c2","start","end","amount","shortest_angle","scale","ctxt","dontStroke","dontFill","renderLeaf","l","context","sides","outerRadius","innerRadius","irregularity","angleStep","currentAngle","points","p1","p2","xc","yc","getWeaponProperties","require","SLOT_SIZE","SLOT_SPACING","PADDING_X","PADDING_Y","BACKGROUND_COLOR","BORDER_COLOR","ACTIVE_BORDER_COLOR","INACTIVE_SLOT_COLOR","TEXT_COLOR","FONT_SIZE","KEY_LABEL_FONT_SIZE","equippedWeaponName","weaponIcons","newUnlockedWeapons","newEquippedWeaponName","weaponName","weaponDisplayName","split","String","event","selectedWeapon","WEAPON_DATA","Map","speed","dmg","knockback","reach","upgrade","multiHit","throwable","combo","block","return","counterDamage","dualThrow","armorBreak","idCounter","weapon","get","WEAPON_NAMES","from","module","exports"],"sourceRoot":""}